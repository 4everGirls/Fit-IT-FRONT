{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nimport axios from 'axios';\nimport router from \"@/router\";\nimport createPersistedState from \"vuex-persistedstate\";\nVue.use(Vuex);\nconst REST_API = `http://localhost:9999`;\nexport default new Vuex.Store({\n  plugins: [createPersistedState()],\n  state: {\n    loginUser: null,\n    videos: [],\n    video: null\n  },\n  getters: {},\n  mutations: {\n    LOGIN_USER(state, user) {\n      state.loginUser = user;\n    },\n    SEARCH_VIDEO(state, videos) {\n      state.videos = videos;\n    }\n  },\n  actions: {\n    loginUser({\n      commit\n    }, user) {\n      console.log(user);\n      const API_URL = `${REST_API}/userApi/login`;\n      axios({\n        url: API_URL,\n        method: \"POST\",\n        data: user\n      }).then(res => {\n        if (res.data.message === \"success\") {\n          commit(\"LOGIN_USER\", user);\n          sessionStorage.setItem(\"access-token\", res.data[\"access-token\"]);\n          router.push({\n            name: \"home\"\n          });\n        } else {\n          alert(\"로그인에 실패하였습니다.\");\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    },\n    createUser({\n      commit\n    }, user) {\n      const API_URL = `${REST_API}/userApi/signup`;\n      axios({\n        url: API_URL,\n        method: \"POST\",\n        data: user\n      }).then(res => {\n        commit;\n        res;\n        alert(\"회원 가입이 완료 되었습니다.\");\n        router.push(\"/login\");\n      }).catch(err => {\n        console.log(err);\n      });\n    },\n    searchVideo({\n      commit\n    }, keyword) {\n      axios({\n        url: API_URL,\n        method: \"GET\",\n        params: {\n          key: YOUTUBE_KEY,\n          part: 'snippet',\n          q: keyword,\n          type: 'video',\n          maxResults: 10\n        }\n      }).then(res => {\n        commit(\"SEARCH_VIDEO\", res.data.items);\n      }).catch(err => console.log(err));\n    }\n  },\n  modules: {}\n});","map":{"version":3,"names":["Vue","Vuex","axios","router","createPersistedState","use","REST_API","Store","plugins","state","loginUser","videos","video","getters","mutations","LOGIN_USER","user","SEARCH_VIDEO","actions","commit","console","log","API_URL","url","method","data","then","res","message","sessionStorage","setItem","push","name","alert","catch","err","createUser","searchVideo","keyword","params","key","YOUTUBE_KEY","part","q","type","maxResults","items","modules"],"sources":["/Users/gimgyuyeon/Desktop/Fit-IT-/FrontEnd/fit-it/src/store/index.js"],"sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\nimport axios from 'axios';\nimport router from \"@/router\";\nimport createPersistedState from \"vuex-persistedstate\";\n\nVue.use(Vuex)\n\nconst REST_API = `http://localhost:9999`;\n\nexport default new Vuex.Store({\n  plugins: [createPersistedState()],\n  state: {\n    loginUser: null,\n    videos: [],\n    video: null,\n  },\n  getters: {\n  },\n  mutations: {\n    LOGIN_USER(state, user) {\n      state.loginUser = user;\n    },\n    SEARCH_VIDEO(state, videos) {\n      state.videos = videos\n    }\n  },\n  actions: {\n    loginUser({ commit }, user) {\n      console.log(user);\n      const API_URL = `${REST_API}/userApi/login`;\n      axios({\n        url: API_URL,\n        method: \"POST\",\n        data: user,\n      })\n        .then((res) => {\n        if (res.data.message === \"success\") {\n            commit(\"LOGIN_USER\", user);\n            sessionStorage.setItem(\"access-token\", res.data[\"access-token\"]);\n            router.push({ name: \"home\" });\n          } else {\n            alert(\"로그인에 실패하였습니다.\");\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    },\n    createUser({ commit }, user) {\n      const API_URL = `${REST_API}/userApi/signup`;\n\n      axios({\n        url: API_URL,\n        method: \"POST\",\n        data: user,\n      })\n        .then((res) => {\n          commit;\n          res;\n          alert(\"회원 가입이 완료 되었습니다.\");\n          router.push(\"/login\");\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    },\n    searchVideo({commit}, keyword) {\n      axios({\n        url: API_URL,\n        method: \"GET\",\n        params: {\n          key: YOUTUBE_KEY,\n          part: 'snippet',\n          q: keyword,\n          type: 'video',\n          maxResults: 10,\n        }\n      })\n        .then((res) => {\n          commit(\"SEARCH_VIDEO\", res.data.items)\n        })\n        .catch((err) => console.log(err));\n    }\n  },\n  modules: {\n  }\n})\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}