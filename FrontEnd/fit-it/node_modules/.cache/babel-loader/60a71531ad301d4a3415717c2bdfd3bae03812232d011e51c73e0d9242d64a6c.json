{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { classNames } from './list-view';\nimport { EventHandler, append, isNullOrUndefined, detach, removeClass, addClass, compile, formatUnit } from '@syncfusion/ej2-base';\nimport { ListBase } from '../common/list-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nvar listElementCount = 1.5;\nvar windowElementCount = 3;\nvar Virtualization = /** @class */function () {\n  function Virtualization(instance) {\n    this.elementDifference = 0;\n    this.listViewInstance = instance;\n  }\n  /**\n   * For internal use only.\n   *\n   * @private\n   */\n  Virtualization.prototype.isNgTemplate = function () {\n    return !isNullOrUndefined(this.listViewInstance.templateRef) && typeof this.listViewInstance.templateRef !== 'string';\n  };\n  /**\n   * For internal use only.\n   *\n   * @private\n   */\n  Virtualization.prototype.uiVirtualization = function () {\n    this.wireScrollEvent(false);\n    var curViewDS = this.listViewInstance.curViewDS;\n    var firstDs = curViewDS.slice(0, 1);\n    this.listViewInstance.ulElement = this.listViewInstance.curUL = ListBase.createList(\n    // eslint-disable-next-line\n    this.listViewInstance.createElement, firstDs, this.listViewInstance.listBaseOption, null, this.listViewInstance);\n    this.listViewInstance.contentContainer = this.listViewInstance.createElement('div', {\n      className: classNames.content\n    });\n    this.listViewInstance.element.appendChild(this.listViewInstance.contentContainer);\n    this.listViewInstance.contentContainer.appendChild(this.listViewInstance.ulElement);\n    this.listItemHeight = this.listViewInstance.ulElement.firstElementChild.getBoundingClientRect().height;\n    this.expectedDomItemCount = this.ValidateItemCount(10000);\n    this.domItemCount = this.ValidateItemCount(Object.keys(this.listViewInstance.curViewDS).length);\n    this.uiFirstIndex = 0;\n    this.uiLastIndex = this.domItemCount - 1;\n    var otherDs = curViewDS.slice(1, this.domItemCount);\n    var listItems = ListBase.createListItemFromJson(\n    // eslint-disable-next-line\n    this.listViewInstance.createElement, otherDs, this.listViewInstance.listBaseOption, null, null, this.listViewInstance);\n    append(listItems, this.listViewInstance.ulElement);\n    this.listViewInstance.liCollection = this.listViewInstance.curUL.querySelectorAll('li');\n    this.topElement = this.listViewInstance.createElement('div');\n    this.listViewInstance.ulElement.insertBefore(this.topElement, this.listViewInstance.ulElement.firstElementChild);\n    this.bottomElement = this.listViewInstance.createElement('div');\n    this.listViewInstance.ulElement.insertBefore(this.bottomElement, null);\n    this.totalHeight = Object.keys(curViewDS).length * this.listItemHeight - this.domItemCount * this.listItemHeight;\n    this.topElement.style.height = 0 + 'px';\n    this.bottomElement.style.height = this.totalHeight + 'px';\n    this.topElementHeight = 0;\n    this.bottomElementHeight = this.totalHeight;\n    this.listDiff = 0;\n    this.uiIndicesInitialization();\n  };\n  Virtualization.prototype.wireScrollEvent = function (destroy) {\n    if (!destroy) {\n      if (this.listViewInstance.isWindow) {\n        this.onVirtualScroll = this.onVirtualUiScroll.bind(this);\n        window.addEventListener('scroll', this.onVirtualScroll);\n      } else {\n        EventHandler.add(this.listViewInstance.element, 'scroll', this.onVirtualUiScroll, this);\n      }\n    } else {\n      if (this.listViewInstance.isWindow === true) {\n        window.removeEventListener('scroll', this.onVirtualScroll);\n        window.removeEventListener('scroll', this.updateUl);\n      } else {\n        EventHandler.remove(this.listViewInstance.element, 'scroll', this.onVirtualUiScroll);\n        EventHandler.remove(this.listViewInstance.element, 'scroll', this.updateUlContainer);\n      }\n    }\n  };\n  Virtualization.prototype.updateUlContainer = function (e) {\n    var listDiff;\n    var virtualElementContainer = this.listViewInstance.ulElement.querySelector('.' + classNames.virtualElementContainer);\n    if (isNullOrUndefined(this.listViewInstance.liElementHeight)) {\n      this.listViewInstance.updateLiElementHeight();\n    }\n    if (this.listViewInstance.isWindow) {\n      // eslint-disable-next-line\n      listDiff = Math.round(e.target.documentElement.scrollTop / this.listViewInstance.liElementHeight) - 2;\n    } else {\n      // eslint-disable-next-line\n      listDiff = Math.round(e.target.scrollTop / this.listViewInstance.liElementHeight) - 2;\n    }\n    if ((listDiff - 1) * this.listViewInstance.liElementHeight < 0) {\n      virtualElementContainer.style.top = '0px';\n    } else {\n      virtualElementContainer.style.top = listDiff * this.listViewInstance.liElementHeight + 'px';\n    }\n  };\n  Virtualization.prototype.ValidateItemCount = function (dataSourceLength) {\n    var height = parseFloat(formatUnit(this.listViewInstance.height));\n    var itemCount;\n    if (this.listViewInstance.isWindow) {\n      itemCount = Math.round(window.innerHeight / this.listItemHeight * windowElementCount);\n    } else {\n      if (typeof this.listViewInstance.height === 'string' && this.listViewInstance.height.indexOf('%') !== -1) {\n        // eslint-disable-next-line max-len\n        itemCount = Math.round(this.listViewInstance.element.getBoundingClientRect().height / this.listItemHeight * listElementCount);\n      } else {\n        itemCount = Math.round(height / this.listItemHeight * listElementCount);\n      }\n    }\n    if (itemCount > dataSourceLength) {\n      itemCount = dataSourceLength;\n    }\n    return itemCount;\n  };\n  Virtualization.prototype.uiIndicesInitialization = function () {\n    this.uiIndices = {\n      'activeIndices': [],\n      'disabledItemIndices': [],\n      'hiddenItemIndices': []\n    };\n    var data = this.listViewInstance.curViewDS;\n    for (var i = 0; i < data.length; i++) {\n      if (this.listViewInstance.showCheckBox && data[i][this.listViewInstance.fields.isChecked]) {\n        this.uiIndices.activeIndices.push(i);\n      }\n      // eslint-disable-next-line\n      if (!isNullOrUndefined(data[i][this.listViewInstance.fields.enabled]) && !data[i][this.listViewInstance.fields.enabled]) {\n        // eslint-disable-next-line\n        this.uiIndices.disabledItemIndices.push(i);\n      }\n    }\n    if (this.isNgTemplate()) {\n      var items = this.listViewInstance.element.querySelectorAll('.' + classNames.listItem);\n      for (var index = 0; index < items.length; index++) {\n        items[index].context = this.listViewInstance.viewContainerRef.get(index).context;\n      }\n    }\n  };\n  Virtualization.prototype.refreshItemHeight = function () {\n    if (this.listViewInstance.curViewDS.length) {\n      var curViewDS = this.listViewInstance.curViewDS;\n      this.listItemHeight = this.topElement.nextSibling.getBoundingClientRect().height;\n      this.totalHeight = Object.keys(curViewDS).length * this.listItemHeight - this.domItemCount * this.listItemHeight;\n      this.bottomElementHeight = this.totalHeight;\n      this.bottomElement.style.height = this.totalHeight + 'px';\n    }\n  };\n  Virtualization.prototype.getscrollerHeight = function (startingHeight) {\n    return this.listViewInstance.isWindow ? pageYOffset - startingHeight <= 0 ? 0 : pageYOffset - startingHeight : this.listViewInstance.element.scrollTop - startingHeight <= 0 ? 0 : this.listViewInstance.element.scrollTop - startingHeight;\n  };\n  Virtualization.prototype.onVirtualUiScroll = function (e) {\n    var _a;\n    var startingHeight;\n    if (this.listViewInstance.isWindow) {\n      startingHeight = this.listViewInstance.ulElement.getBoundingClientRect().top - document.documentElement.getBoundingClientRect().top;\n    } else {\n      startingHeight = this.listViewInstance.headerEle ? this.listViewInstance.headerEle.getBoundingClientRect().height : 0;\n    }\n    this.scrollPosition = isNullOrUndefined(this.scrollPosition) ? 0 : this.scrollPosition;\n    var scroll = this.getscrollerHeight(startingHeight);\n    this.topElementHeight = this.listItemHeight * Math.floor(scroll / this.listItemHeight);\n    this.bottomElementHeight = this.totalHeight - this.topElementHeight;\n    _a = scroll <= this.totalHeight ? [this.topElementHeight, this.bottomElementHeight] : [this.totalHeight, 0], this.topElementHeight = _a[0], this.bottomElementHeight = _a[1];\n    if (this.topElementHeight !== parseFloat(this.topElement.style.height)) {\n      this.topElement.style.height = this.topElementHeight + 'px';\n      this.bottomElement.style.height = this.bottomElementHeight + 'px';\n      if (scroll > this.scrollPosition) {\n        var listDiff = Math.round(this.topElementHeight / this.listItemHeight - this.listDiff);\n        if (listDiff > this.expectedDomItemCount + 5) {\n          this.onLongScroll(listDiff, true);\n        } else {\n          this.onNormalScroll(listDiff, true);\n        }\n      } else {\n        var listDiff = Math.round(this.listDiff - this.topElementHeight / this.listItemHeight);\n        if (listDiff > this.expectedDomItemCount + 5) {\n          this.onLongScroll(listDiff, false);\n        } else {\n          this.onNormalScroll(listDiff, false);\n        }\n      }\n    }\n    this.listDiff = Math.round(this.topElementHeight / this.listItemHeight);\n    if (typeof this.listViewInstance.onUIScrolled === 'function') {\n      this.listViewInstance.onUIScrolled();\n    }\n    this.scrollPosition = scroll;\n  };\n  Virtualization.prototype.onLongScroll = function (listDiff, isScrollingDown) {\n    var index = isScrollingDown ? this.uiFirstIndex + listDiff : this.uiFirstIndex - listDiff;\n    var elements = this.listViewInstance.ulElement.querySelectorAll('li');\n    for (var i = 0; i < elements.length; i++) {\n      this.updateUI(elements[i], index);\n      index++;\n    }\n    this.uiLastIndex = isScrollingDown ? this.uiLastIndex + listDiff : this.uiLastIndex - listDiff;\n    this.uiFirstIndex = isScrollingDown ? this.uiFirstIndex + listDiff : this.uiFirstIndex - listDiff;\n  };\n  Virtualization.prototype.onNormalScroll = function (listDiff, isScrollingDown) {\n    if (isScrollingDown) {\n      for (var i = 0; i < listDiff; i++) {\n        var index = ++this.uiLastIndex;\n        this.updateUI(this.topElement.nextElementSibling, index, this.bottomElement);\n        this.uiFirstIndex++;\n      }\n    } else {\n      for (var i = 0; i < listDiff; i++) {\n        var index = --this.uiFirstIndex;\n        var target = this.topElement.nextSibling;\n        this.updateUI(this.bottomElement.previousElementSibling, index, target);\n        this.uiLastIndex--;\n      }\n    }\n  };\n  Virtualization.prototype.updateUiContent = function (element, index) {\n    // eslint-disable-next-line\n    var curViewDs = this.listViewInstance.curViewDS;\n    if (typeof this.listViewInstance.dataSource[0] === 'string' || typeof this.listViewInstance.dataSource[0] === 'number') {\n      element.dataset.uid = ListBase.generateId();\n      element.getElementsByClassName(classNames.listItemText)[0].innerHTML = this.listViewInstance.curViewDS[index].toString();\n    } else {\n      // eslint-disable-next-line\n      element.dataset.uid = curViewDs[index][this.listViewInstance.fields.id] ?\n      // eslint-disable-next-line\n      curViewDs[index][this.listViewInstance.fields.id] : ListBase.generateId();\n      element.getElementsByClassName(classNames.listItemText)[0].innerHTML =\n      // eslint-disable-next-line\n      curViewDs[index][this.listViewInstance.fields.text];\n    }\n    if (this.listViewInstance.showIcon) {\n      if (element.querySelector('.' + classNames.listIcon)) {\n        detach(element.querySelector('.' + classNames.listIcon));\n      }\n      if (this.listViewInstance.curViewDS[index][this.listViewInstance.fields.iconCss]) {\n        var textContent = element.querySelector('.' + classNames.textContent);\n        var target = this.listViewInstance.createElement('div', {\n          className: classNames.listIcon + ' ' + this.listViewInstance.curViewDS[index][this.listViewInstance.fields.iconCss]\n        });\n        textContent.insertBefore(target, element.querySelector('.' + classNames.listItemText));\n      }\n    }\n    if (this.listViewInstance.showCheckBox && this.listViewInstance.fields.groupBy) {\n      if (!this.checkListWrapper) {\n        this.checkListWrapper = this.listViewInstance.curUL.querySelector('.' + classNames.checkboxWrapper).cloneNode(true);\n      }\n      var textContent = element.querySelector('.' + classNames.textContent);\n      if (this.listViewInstance.curViewDS[index].isHeader) {\n        if (element.querySelector('.' + classNames.checkboxWrapper)) {\n          element.classList.remove(classNames.checklist);\n          textContent.classList.remove(classNames.checkbox);\n          detach(element.querySelector('.' + classNames.checkboxWrapper));\n        }\n      } else {\n        if (!element.querySelector('.' + classNames.checkboxWrapper)) {\n          element.classList.add(classNames.checklist);\n          textContent.classList.add(classNames.checkbox);\n          textContent.insertBefore(this.checkListWrapper.cloneNode(true), element.querySelector('.' + classNames.listItemText));\n        }\n      }\n    }\n  };\n  Virtualization.prototype.changeElementAttributes = function (element, index) {\n    element.classList.remove(classNames.disable);\n    if (this.uiIndices.disabledItemIndices.length && this.uiIndices.disabledItemIndices.indexOf(index) !== -1) {\n      element.classList.add(classNames.disable);\n    }\n    element.style.display = '';\n    if (this.uiIndices.hiddenItemIndices.length && this.uiIndices.hiddenItemIndices.indexOf(index) !== -1) {\n      element.style.display = 'none';\n    }\n    if (this.listViewInstance.showCheckBox) {\n      var checklistElement = element.querySelector('.' + classNames.checkboxWrapper);\n      element.classList.remove(classNames.selected);\n      element.classList.remove(classNames.focused);\n      if (checklistElement) {\n        checklistElement.removeAttribute('aria-checked');\n        checklistElement.firstElementChild.classList.remove(classNames.checked);\n      }\n      if (this.uiIndices.activeIndices.length && this.uiIndices.activeIndices.indexOf(index) !== -1 && !this.listViewInstance.curUL.querySelector(classNames.selected)) {\n        element.classList.add(classNames.selected);\n        checklistElement.firstElementChild.classList.add(classNames.checked);\n        checklistElement.setAttribute('aria-checked', 'true');\n        if (this.activeIndex === index) {\n          element.classList.add(classNames.focused);\n        }\n      }\n    } else {\n      element.classList.remove(classNames.selected);\n      element.removeAttribute('aria-selected');\n      if (!isNullOrUndefined(this.activeIndex) && this.activeIndex === index && !this.listViewInstance.curUL.querySelector(classNames.selected)) {\n        element.classList.add(classNames.selected);\n        element.setAttribute('aria-selected', 'true');\n      }\n    }\n    if (this.listViewInstance.fields.groupBy) {\n      if (this.listViewInstance.curViewDS[index].isHeader) {\n        if (element.classList.contains(classNames.listItem)) {\n          element.classList.remove(classNames.listItem);\n          element.setAttribute('role', 'group');\n          element.classList.add(classNames.groupListItem);\n        }\n      } else {\n        if (element.classList.contains(classNames.groupListItem)) {\n          element.classList.remove(classNames.groupListItem);\n          element.setAttribute('role', 'listitem');\n          element.classList.add(classNames.listItem);\n        }\n      }\n    }\n  };\n  Virtualization.prototype.findDSAndIndexFromId = function (ds, fields) {\n    var _this = this;\n    var resultJSON = {};\n    fields = this.listViewInstance.getElementUID(fields);\n    if (!isNullOrUndefined(fields)) {\n      ds.some(function (data, index) {\n        if (fields[_this.listViewInstance.fields.id] &&\n        // eslint-disable-next-line\n        fields[_this.listViewInstance.fields.id]\n        // eslint-disable-next-line\n        === (data[_this.listViewInstance.fields.id] && data[_this.listViewInstance.fields.id]) || fields === data) {\n          resultJSON.index = index;\n          resultJSON.data = data;\n          return true;\n        } else {\n          return false;\n        }\n      });\n    }\n    return resultJSON;\n  };\n  Virtualization.prototype.getSelectedItems = function () {\n    var _this = this;\n    if (!isNullOrUndefined(this.activeIndex) || this.listViewInstance.showCheckBox && this.uiIndices.activeIndices.length) {\n      var dataCollection = [];\n      var textCollection = [];\n      if (typeof this.listViewInstance.dataSource[0] === 'string' || typeof this.listViewInstance.dataSource[0] === 'number') {\n        var curViewDS_1 = this.listViewInstance.curViewDS;\n        if (this.listViewInstance.showCheckBox) {\n          var indices = this.uiIndices.activeIndices;\n          for (var i = 0; i < indices.length; i++) {\n            dataCollection.push(curViewDS_1[indices[i]]);\n          }\n          return {\n            text: dataCollection,\n            // eslint-disable-next-line\n            data: dataCollection,\n            index: this.uiIndices.activeIndices.map(function (index) {\n              return _this.listViewInstance.dataSource.indexOf(curViewDS_1[index]);\n            })\n          };\n        } else {\n          return {\n            text: curViewDS_1[this.activeIndex],\n            data: curViewDS_1[this.activeIndex],\n            index: this.listViewInstance.dataSource.indexOf(curViewDS_1[this.activeIndex])\n          };\n        }\n      } else {\n        var curViewDS_2 = this.listViewInstance.curViewDS;\n        var text = this.listViewInstance.fields.text;\n        if (this.listViewInstance.showCheckBox) {\n          var indexArray = this.uiIndices.activeIndices;\n          for (var i = 0; i < indexArray.length; i++) {\n            textCollection.push(curViewDS_2[indexArray[i]][text]);\n            // eslint-disable-next-line\n            dataCollection.push(curViewDS_2[indexArray[i]]);\n          }\n          // eslint-disable-next-line\n          var dataSource_1 = this.listViewInstance.dataSource instanceof DataManager ? curViewDS_2 : this.listViewInstance.dataSource;\n          return {\n            text: textCollection,\n            // eslint-disable-next-line\n            data: dataCollection,\n            index: this.uiIndices.activeIndices.map(function (index) {\n              return dataSource_1.indexOf(curViewDS_2[index]);\n            })\n          };\n        } else {\n          // eslint-disable-next-line\n          var dataSource = this.listViewInstance.dataSource instanceof DataManager ? curViewDS_2 : this.listViewInstance.dataSource;\n          return {\n            text: curViewDS_2[this.activeIndex][this.listViewInstance.fields.text],\n            // eslint-disable-next-line\n            data: curViewDS_2[this.activeIndex],\n            index: dataSource.indexOf(curViewDS_2[this.activeIndex])\n          };\n        }\n      }\n    } else {\n      return undefined;\n    }\n  };\n  Virtualization.prototype.selectItem = function (obj) {\n    // eslint-disable-next-line\n    var resutJSON = this.findDSAndIndexFromId(this.listViewInstance.curViewDS, obj);\n    if (Object.keys(resutJSON).length) {\n      var isSelected = this.activeIndex === resutJSON.index;\n      var isChecked = void 0;\n      this.activeIndex = resutJSON.index;\n      if (this.listViewInstance.showCheckBox) {\n        if (this.uiIndices.activeIndices.indexOf(resutJSON.index) === -1) {\n          isChecked = true;\n          this.uiIndices.activeIndices.push(resutJSON.index);\n        } else {\n          isChecked = false;\n          this.uiIndices.activeIndices.splice(this.uiIndices.activeIndices.indexOf(resutJSON.index), 1);\n        }\n        if (this.listViewInstance.curUL.querySelector('.' + classNames.focused)) {\n          this.listViewInstance.curUL.querySelector('.' + classNames.focused).classList.remove(classNames.focused);\n        }\n      }\n      if (this.listViewInstance.getLiFromObjOrElement(obj)) {\n        if (this.listViewInstance.showCheckBox) {\n          this.listViewInstance.setCheckboxLI(this.listViewInstance.getLiFromObjOrElement(obj));\n        } else {\n          this.listViewInstance.setSelectLI(this.listViewInstance.getLiFromObjOrElement(obj));\n        }\n      } else {\n        // eslint-disable-next-line\n        var eventArgs = void 0;\n        if (typeof this.listViewInstance.dataSource[0] === 'string' || typeof this.listViewInstance.dataSource[0] === 'number') {\n          eventArgs = {\n            text: this.listViewInstance.curViewDS[this.activeIndex],\n            data: this.listViewInstance.curViewDS[this.activeIndex],\n            index: this.activeIndex\n          };\n        } else {\n          var curViewDS = this.listViewInstance.curViewDS;\n          eventArgs = {\n            text: curViewDS[this.activeIndex][this.listViewInstance.fields.text],\n            data: curViewDS[this.activeIndex],\n            index: this.activeIndex\n          };\n        }\n        if (this.listViewInstance.showCheckBox) {\n          eventArgs.isChecked = isChecked;\n          this.listViewInstance.trigger('select', eventArgs);\n        } else if (!isSelected) {\n          this.listViewInstance.removeSelect();\n          this.listViewInstance.trigger('select', eventArgs);\n        }\n      }\n    } else if (isNullOrUndefined(obj) && !this.listViewInstance.showCheckBox) {\n      this.listViewInstance.removeSelect();\n      this.activeIndex = undefined;\n    }\n  };\n  Virtualization.prototype.enableItem = function (obj) {\n    // eslint-disable-next-line\n    var resutJSON = this.findDSAndIndexFromId(this.listViewInstance.curViewDS, obj);\n    if (Object.keys(resutJSON).length) {\n      this.uiIndices.disabledItemIndices.splice(this.uiIndices.disabledItemIndices.indexOf(resutJSON.index), 1);\n    }\n  };\n  Virtualization.prototype.disableItem = function (obj) {\n    // eslint-disable-next-line\n    var resutJSON = this.findDSAndIndexFromId(this.listViewInstance.curViewDS, obj);\n    if (Object.keys(resutJSON).length && this.uiIndices.disabledItemIndices.indexOf(resutJSON.index) === -1) {\n      this.uiIndices.disabledItemIndices.push(resutJSON.index);\n    }\n  };\n  Virtualization.prototype.showItem = function (obj) {\n    // eslint-disable-next-line\n    var resutJSON = this.findDSAndIndexFromId(this.listViewInstance.curViewDS, obj);\n    if (Object.keys(resutJSON).length) {\n      this.uiIndices.hiddenItemIndices.splice(this.uiIndices.hiddenItemIndices.indexOf(resutJSON.index), 1);\n    }\n  };\n  Virtualization.prototype.hideItem = function (obj) {\n    // eslint-disable-next-line\n    var resutJSON = this.findDSAndIndexFromId(this.listViewInstance.curViewDS, obj);\n    if (Object.keys(resutJSON).length && this.uiIndices.hiddenItemIndices.indexOf(resutJSON.index) === -1) {\n      this.uiIndices.hiddenItemIndices.push(resutJSON.index);\n    }\n  };\n  Virtualization.prototype.removeItem = function (obj) {\n    var dataSource;\n    var curViewDS = this.listViewInstance.curViewDS;\n    // eslint-disable-next-line\n    var resutJSON = this.findDSAndIndexFromId(curViewDS, obj);\n    // eslint-disable-next-line\n    if (Object.keys(resutJSON).length) {\n      dataSource = resutJSON.data;\n      if (curViewDS[resutJSON.index - 1] && curViewDS[resutJSON.index - 1].isHeader && curViewDS[resutJSON.index - 1].items.length === 1) {\n        this.removeUiItem(resutJSON.index - 1);\n        this.removeUiItem(resutJSON.index - 1);\n      } else {\n        this.removeUiItem(resutJSON.index);\n      }\n    }\n    var listDataSource = this.listViewInstance.dataSource instanceof DataManager ? this.listViewInstance.localData : this.listViewInstance.dataSource;\n    var index = listDataSource.indexOf(dataSource);\n    if (index !== -1) {\n      listDataSource.splice(index, 1);\n      this.listViewInstance.setViewDataSource(listDataSource);\n    }\n    // recollect all the list item into collection\n    this.listViewInstance.liCollection = this.listViewInstance.curUL.querySelectorAll('li');\n  };\n  // eslint-disable-next-line\n  Virtualization.prototype.setCheckboxLI = function (li, e) {\n    var index = Array.prototype.indexOf.call(this.listViewInstance.curUL.querySelectorAll('li'), li) + this.uiFirstIndex;\n    this.activeIndex = Array.prototype.indexOf.call(this.listViewInstance.curUL.querySelectorAll('li'), li) + this.uiFirstIndex;\n    if (li.classList.contains(classNames.selected)) {\n      if (this.uiIndices.activeIndices.indexOf(index) === -1) {\n        this.uiIndices.activeIndices.push(index);\n      }\n    } else {\n      this.uiIndices.activeIndices.splice(this.uiIndices.activeIndices.indexOf(index), 1);\n    }\n  };\n  // eslint-disable-next-line\n  Virtualization.prototype.setSelectLI = function (li, e) {\n    this.activeIndex = Array.prototype.indexOf.call(this.listViewInstance.curUL.querySelectorAll('li'), li) + this.uiFirstIndex;\n  };\n  Virtualization.prototype.checkedItem = function (checked) {\n    if (checked) {\n      this.uiIndices.activeIndices = [];\n      this.activeIndex = undefined;\n      var data = this.listViewInstance.curViewDS;\n      for (var index = 0; index < data.length; index++) {\n        if (!data[index].isHeader) {\n          this.uiIndices.activeIndices.push(index);\n        }\n      }\n    } else {\n      this.activeIndex = undefined;\n      this.uiIndices.activeIndices = [];\n    }\n  };\n  Virtualization.prototype.addUiItem = function (index) {\n    // virtually new add list item based on the scollbar position\n    // if the scroll bar is at the top, just pretend the new item has been added since no UI\n    // change is required for the item that has been added at last but when scroll bar is at the bottom\n    // just detach top and inject into bottom to mimic new item is added\n    var curViewDs = this.listViewInstance.curViewDS;\n    this.changeUiIndices(index, true);\n    if (this.activeIndex && this.activeIndex >= index) {\n      this.activeIndex++;\n    }\n    if (this.listViewInstance.showCheckBox && curViewDs[index][this.listViewInstance.fields.isChecked]) {\n      this.uiIndices.activeIndices.push(index);\n    }\n    if (!parseFloat(this.bottomElement.style.height) && !parseFloat(this.topElement.style.height)) {\n      this.bottomElement.style.height = parseFloat(this.bottomElement.style.height) + this.listItemHeight + 'px';\n    }\n    if (parseFloat(this.bottomElement.style.height)) {\n      var liItem = this.listViewInstance.curUL.lastElementChild.previousSibling;\n      var target = this.listViewInstance.getLiFromObjOrElement(curViewDs[index + 1]) || this.listViewInstance.getLiFromObjOrElement(curViewDs[index + 2]);\n      if (target) {\n        this.bottomElement.style.height = parseFloat(this.bottomElement.style.height) + this.listItemHeight + 'px';\n        this.updateUI(liItem, index, target);\n      }\n    } else {\n      var liItem = this.listViewInstance.curUL.firstElementChild.nextSibling;\n      var target = void 0;\n      if (Object.keys(this.listViewInstance.curViewDS).length - 1 === index) {\n        target = this.listViewInstance.curUL.lastElementChild;\n      } else {\n        target = this.listViewInstance.getLiFromObjOrElement(curViewDs[index + 1]) || this.listViewInstance.getLiFromObjOrElement(curViewDs[index + 2]);\n      }\n      this.topElement.style.height = parseFloat(this.topElement.style.height) + this.listItemHeight + 'px';\n      this.uiFirstIndex++;\n      this.uiLastIndex++;\n      if (target) {\n        this.updateUI(liItem, index, target);\n        if (this.listViewInstance.isWindow === true) {\n          window.scrollTo(0, pageYOffset + this.listItemHeight);\n        } else {\n          this.listViewInstance.element.scrollTop += this.listItemHeight;\n        }\n      }\n    }\n    this.totalHeight += this.listItemHeight;\n    this.listDiff = Math.round(parseFloat(this.topElement.style.height) / this.listItemHeight);\n  };\n  Virtualization.prototype.removeUiItem = function (index) {\n    this.totalHeight -= this.listItemHeight;\n    var curViewDS = this.listViewInstance.curViewDS[index];\n    var liItem = this.listViewInstance.getLiFromObjOrElement(curViewDS);\n    this.listViewInstance.curViewDS.splice(index, 1);\n    if (this.activeIndex && this.activeIndex >= index) {\n      this.activeIndex--;\n    }\n    if (liItem) {\n      if (this.domItemCount > Object.keys(this.listViewInstance.curViewDS).length) {\n        detach(liItem);\n        this.domItemCount--;\n        this.uiLastIndex--;\n        this.totalHeight = 0;\n      } else {\n        if (liItem.classList.contains(classNames.disable)) {\n          liItem.classList.remove(classNames.disable);\n          this.uiIndices.disabledItemIndices.splice(this.uiIndices.disabledItemIndices.indexOf(index), 1);\n        }\n        if (liItem.style.display === 'none') {\n          liItem.style.display = '';\n          this.uiIndices.hiddenItemIndices.splice(this.uiIndices.hiddenItemIndices.indexOf(index), 1);\n        }\n        if (this.listViewInstance.showCheckBox && liItem.classList.contains(classNames.selected)) {\n          this.listViewInstance.removeSelect();\n          this.uiIndices.activeIndices.splice(this.uiIndices.activeIndices.indexOf(index), 1);\n          var checklistElement = liItem.querySelector('.' + classNames.checkboxWrapper);\n          checklistElement.removeAttribute('aria-checked');\n          checklistElement.firstElementChild.classList.remove(classNames.checked);\n          if (liItem.classList.contains(classNames.focused)) {\n            liItem.classList.remove(classNames.focused);\n            this.activeIndex = undefined;\n          }\n        } else if (liItem.classList.contains(classNames.selected)) {\n          this.listViewInstance.removeSelect();\n          this.activeIndex = undefined;\n        }\n        if (!parseFloat(this.bottomElement.style.height) && !parseFloat(this.topElement.style.height)) {\n          this.updateUI(liItem, this.uiLastIndex, this.bottomElement);\n        } else if (parseFloat(this.bottomElement.style.height)) {\n          this.bottomElement.style.height = parseFloat(this.bottomElement.style.height) - this.listItemHeight + 'px';\n          this.updateUI(liItem, this.uiLastIndex, this.bottomElement);\n        } else {\n          this.topElement.style.height = parseFloat(this.topElement.style.height) - this.listItemHeight + 'px';\n          this.updateUI(liItem, this.uiFirstIndex - 1, this.topElement.nextSibling);\n          this.uiLastIndex--;\n          this.uiFirstIndex--;\n        }\n      }\n    }\n    this.changeUiIndices(index, false);\n    this.listDiff = Math.round(parseFloat(this.topElement.style.height) / this.listItemHeight);\n  };\n  Virtualization.prototype.changeUiIndices = function (index, increment) {\n    var keys = Object.keys(this.uiIndices);\n    for (var ind = 0; ind < keys.length; ind++) {\n      this.uiIndices[keys[ind]] = this.uiIndices[keys[ind]].map(function (i) {\n        if (i >= index) {\n          return increment ? ++i : --i;\n        } else {\n          return i;\n        }\n      });\n    }\n  };\n  Virtualization.prototype.addItem = function (data, fields, dataSource) {\n    for (var i = 0; i < data.length; i++) {\n      var currentItem = data[i];\n      // push the given data to main data array\n      dataSource.push(currentItem);\n      // recalculate all the group data or other datasource related things\n      this.listViewInstance.setViewDataSource(dataSource);\n      // render list items for first time due to no datasource present earlier\n      if (!this.domItemCount) {\n        // fresh rendering for first time\n        if ((this.listViewInstance.template || this.listViewInstance.groupTemplate) && !this.isNgTemplate()) {\n          this.listViewInstance.listBaseOption.template = null;\n          this.listViewInstance.listBaseOption.groupTemplate = null;\n          this.listViewInstance.listBaseOption.itemCreated = this.createUIItem.bind(this);\n        }\n        this.uiVirtualization();\n        // when expected expected DOM count doesn't meet the condition we need to create and inject new item into DOM\n      } else if (this.domItemCount < this.expectedDomItemCount) {\n        var ds = this.listViewInstance.findItemFromDS(dataSource, fields);\n        if (ds instanceof Array) {\n          if (this.listViewInstance.ulElement) {\n            var index = this.listViewInstance.curViewDS.indexOf(currentItem);\n            // inject new list item into DOM\n            this.createAndInjectNewItem(currentItem, index);\n            // check for group header item\n            var curViewDS = this.listViewInstance.curViewDS[index - 1];\n            if (curViewDS && curViewDS.isHeader && curViewDS.items.length === 1) {\n              // target group item index in datasource\n              --index;\n              // inject new group header into DOM for previously created list item\n              this.createAndInjectNewItem(curViewDS, index);\n            }\n          }\n          // recollect all the list item into collection\n          this.listViewInstance.liCollection = this.listViewInstance.curUL.querySelectorAll('li');\n        }\n      } else {\n        // eslint-disable-next-line\n        var index = this.listViewInstance.curViewDS.indexOf(currentItem);\n        // virtually new add list item based on the scollbar position\n        this.addUiItem(index);\n        // check for group header item needs to be added\n        var curViewDS = this.listViewInstance.curViewDS[index - 1];\n        if (curViewDS && curViewDS.isHeader && curViewDS.items.length === 1) {\n          this.addUiItem(index - 1);\n        }\n      }\n    }\n  };\n  Virtualization.prototype.createAndInjectNewItem = function (itemData, index) {\n    // generate li item for given datasource\n    var target;\n    var li = ListBase.createListItemFromJson(this.listViewInstance.createElement,\n    // eslint-disable-next-line\n    [itemData], this.listViewInstance.listBaseOption, null, null, this.listViewInstance);\n    // check for target element whether to insert before last item or group item\n    if (Object.keys(this.listViewInstance.curViewDS).length - 1 === index) {\n      target = this.listViewInstance.curUL.lastElementChild;\n    } else {\n      // target group header's first child item to append its header\n      target = this.listViewInstance.getLiFromObjOrElement(this.listViewInstance.curViewDS[index + 1]) || this.listViewInstance.getLiFromObjOrElement(this.listViewInstance.curViewDS[index + 2]);\n    }\n    if (this.listViewInstance.fields.groupBy && this.listViewInstance.curViewDS[index + 1] && this.listViewInstance.curViewDS[index + 1].isHeader) {\n      var targetEle = this.listViewInstance.getLiFromObjOrElement(this.listViewInstance.curViewDS[index - 1]);\n      if (targetEle) {\n        target = targetEle.nextElementSibling;\n      }\n    }\n    // insert before the target element\n    this.listViewInstance.ulElement.insertBefore(li[0], target);\n    // increment internal DOM count, last index count for new element\n    this.domItemCount++;\n    if (this.bottomElementHeight <= 0) {\n      this.uiLastIndex++;\n    }\n    // recalculate the current item height, to avoid jumpy scroller\n    this.refreshItemHeight();\n  };\n  Virtualization.prototype.createUIItem = function (args) {\n    var virtualTemplate = this.listViewInstance.template;\n    var template = this.listViewInstance.createElement('div');\n    var commonTemplate = '<div class=\"e-text-content\" role=\"presentation\"> ' + '<span class=\"e-list-text\"> ${' + this.listViewInstance.fields.text + '} </span></div>';\n    if (this.listViewInstance.isReact) {\n      commonTemplate = null;\n    }\n    if (this.listViewInstance.showCheckBox) {\n      // eslint-disable-next-line\n      this.listViewInstance.renderCheckbox(args);\n      if (!isNullOrUndefined(this.listViewInstance.virtualCheckBox) && !isNullOrUndefined(this.listViewInstance.virtualCheckBox.outerHTML)) {\n        var div = document.createElement('div');\n        div.innerHTML = this.listViewInstance.template || commonTemplate;\n        if (div.children && div.children[0]) {\n          div.children[0].classList.add('e-checkbox');\n          if (this.listViewInstance.checkBoxPosition === 'Left') {\n            div.children[0].classList.add('e-checkbox-left');\n          } else {\n            div.children[0].classList.add('e-checkbox-right');\n          }\n          if (this.listViewInstance.checkBoxPosition === 'Left') {\n            div.children[0].insertBefore(this.listViewInstance.virtualCheckBox, div.childNodes[0].children[0]);\n          } else {\n            div.children[0].appendChild(this.listViewInstance.virtualCheckBox);\n          }\n          this.listViewInstance.template = div.innerHTML;\n        }\n      }\n      template.innerHTML = this.listViewInstance.template;\n      this.listViewInstance.template = virtualTemplate;\n    } else {\n      template.innerHTML = this.listViewInstance.template || commonTemplate;\n    }\n    // eslint-disable-next-line\n    var templateElements = template.getElementsByTagName('*');\n    var groupTemplate = this.listViewInstance.createElement('div');\n    if (this.listViewInstance.fields.groupBy) {\n      groupTemplate.innerHTML = this.listViewInstance.groupTemplate || commonTemplate;\n    }\n    // eslint-disable-next-line\n    var groupTemplateElements = groupTemplate.getElementsByTagName('*');\n    if (args.curData.isHeader) {\n      this.headerData = args.curData;\n    }\n    this.templateData = args.curData.isHeader ? args.curData.items[0] : args.curData;\n    if (!this.listViewInstance.isReact || typeof this.listViewInstance.template == \"string\" && !args.item.classList.contains(\"e-list-group-item\") || typeof this.listViewInstance.groupTemplate == \"string\" && args.item.classList.contains(\"e-list-group-item\")) {\n      args.item.innerHTML = '';\n    }\n    args.item.context = {\n      data: args.curData,\n      nodes: {\n        flatTemplateNodes: [],\n        groupTemplateNodes: []\n      }\n    };\n    for (var i = 0; i < templateElements.length; i++) {\n      this.compileTemplate(templateElements[i], args.item, false);\n    }\n    for (var i = 0; i < groupTemplateElements.length; i++) {\n      this.compileTemplate(groupTemplateElements[i], args.item, true);\n    }\n    args.item.context.template = args.curData.isHeader ? template.firstElementChild : groupTemplate.firstElementChild;\n    args.item.context.type = args.curData.isHeader ? 'flatList' : 'groupList';\n    var element = args.curData.isHeader ? groupTemplate : template;\n    if (element.firstElementChild) {\n      args.item.insertBefore(element.firstElementChild, null);\n    }\n  };\n  Virtualization.prototype.compileTemplate = function (element, item, isHeader) {\n    this.textProperty(element, item, isHeader);\n    this.classProperty(element, item, isHeader);\n    this.attributeProperty(element, item, isHeader);\n  };\n  Virtualization.prototype.onChange = function (newData, listElement) {\n    listElement.context.data = newData;\n    // eslint-disable-next-line max-len\n    var groupTemplateNodes = listElement.context.nodes.groupTemplateNodes;\n    // eslint-disable-next-line max-len\n    var flatTemplateNodes = listElement.context.nodes.flatTemplateNodes;\n    // eslint-disable-next-line\n    if (!isNullOrUndefined(newData.isHeader) && newData.isHeader && listElement.context.type === 'groupList') {\n      // eslint-disable-next-line\n      var element = listElement.firstElementChild;\n      detach(listElement.firstElementChild);\n      listElement.insertBefore(listElement.context.template, null);\n      listElement.context.template = element;\n      listElement.context.type = 'flatList';\n      for (var i = 0; i < groupTemplateNodes.length; i++) {\n        // eslint-disable-next-line\n        groupTemplateNodes[i].onChange(newData);\n      }\n    } else if (!newData.isHeader && listElement.context.type === 'flatList') {\n      var element = listElement.firstElementChild;\n      detach(listElement.firstElementChild);\n      listElement.insertBefore(listElement.context.template, null);\n      listElement.context.template = element;\n      listElement.context.type = 'groupList';\n      for (var i = 0; i < flatTemplateNodes.length; i++) {\n        // eslint-disable-next-line\n        flatTemplateNodes[i].onChange(newData);\n      }\n    } else if (!newData.isHeader) {\n      for (var i = 0; i < flatTemplateNodes.length; i++) {\n        // eslint-disable-next-line\n        flatTemplateNodes[i].onChange(newData);\n      }\n    } else {\n      for (var i = 0; i < groupTemplateNodes.length; i++) {\n        // eslint-disable-next-line\n        groupTemplateNodes[i].onChange(newData);\n      }\n    }\n  };\n  // eslint-disable-next-line\n  Virtualization.prototype.updateContextData = function (listElement, node, isHeader) {\n    if (isHeader) {\n      listElement.context.nodes.groupTemplateNodes.push(node);\n    } else {\n      listElement.context.nodes.flatTemplateNodes.push(node);\n    }\n  };\n  Virtualization.prototype.classProperty = function (element, listElement, isHeader) {\n    var regex = new RegExp('\\\\${([^}]*)}', 'g');\n    var resultantOutput = [];\n    var regexMatch;\n    while (regexMatch !== null) {\n      var match = regex.exec(element.className);\n      resultantOutput.push(match);\n      regexMatch = match;\n      if (regexMatch === null) {\n        resultantOutput.pop();\n      }\n    }\n    if (resultantOutput && resultantOutput.length) {\n      var _loop_1 = function (i) {\n        var classNameMatch = resultantOutput[i];\n        // eslint-disable-next-line\n        var classFunction;\n        if (classNameMatch[1].indexOf('?') !== -1 && classNameMatch[1].indexOf(':') !== -1) {\n          // tslint:disable-next-line:no-function-constructor-with-string-args\n          classFunction = new Function('data', 'return ' + classNameMatch[1].replace(/\\$/g, 'data.'));\n        } else {\n          // tslint:disable-next-line:no-function-constructor-with-string-args\n          classFunction = new Function('data', 'return ' + 'data.' + classNameMatch[1]);\n        }\n        // eslint-disable-next-line\n        var subNode = {};\n        if (isHeader) {\n          subNode.bindedvalue = classFunction(this_1.headerData);\n        } else {\n          subNode.bindedvalue = classFunction(this_1.templateData);\n        }\n        subNode.onChange = function (value) {\n          if (subNode.bindedvalue) {\n            removeClass([element], subNode.bindedvalue.split(' ').filter(function (css) {\n              return css;\n            }));\n          }\n          var newCss = classFunction(value);\n          if (newCss) {\n            addClass([element], newCss.split(' ').filter(function (css) {\n              return css;\n            }));\n          }\n          subNode.bindedvalue = newCss;\n        };\n        var className = classNameMatch[0].split(' ');\n        for (var i_1 = 0; i_1 < className.length; i_1++) {\n          element.classList.remove(className[i_1]);\n        }\n        if (subNode.bindedvalue) {\n          addClass([element], subNode.bindedvalue.split(' ').filter(function (css) {\n            return css;\n          }));\n        }\n        this_1.updateContextData(listElement, subNode, isHeader);\n      };\n      var this_1 = this;\n      for (var i = 0; i < resultantOutput.length; i++) {\n        _loop_1(i);\n      }\n    }\n  };\n  Virtualization.prototype.attributeProperty = function (element, listElement, isHeader) {\n    var attributeNames = [];\n    for (var i = 0; i < element.attributes.length; i++) {\n      attributeNames.push(element.attributes[i].nodeName);\n    }\n    if (attributeNames.indexOf('class') !== -1) {\n      attributeNames.splice(attributeNames.indexOf('class'), 1);\n    }\n    var _loop_2 = function (i) {\n      var attributeName = attributeNames[i];\n      var attrNameMatch = new RegExp('\\\\${([^}]*)}', 'g').exec(attributeName) || [];\n      var attrValueMatch = new RegExp('\\\\${([^}]*)}', 'g').exec(element.getAttribute(attributeName)) || [];\n      // eslint-disable-next-line\n      var attributeNameFunction;\n      // eslint-disable-next-line\n      var attributeValueFunction;\n      if (attrNameMatch.length || attrValueMatch.length) {\n        if (attrNameMatch[1]) {\n          // tslint:disable-next-line:no-function-constructor-with-string-args\n          attributeNameFunction = new Function('data', 'return ' + 'data.' + attrNameMatch[1]);\n        }\n        if (attrValueMatch[1]) {\n          if (attrValueMatch[1].indexOf('?') !== -1 && attrValueMatch[1].indexOf(':') !== -1) {\n            // tslint:disable-next-line:no-function-constructor-with-string-args\n            attributeValueFunction = new Function('data', 'return ' + attrValueMatch[1].replace(/\\$/g, 'data.'));\n          } else {\n            // tslint:disable-next-line:no-function-constructor-with-string-args\n            attributeValueFunction = new Function('data', 'return ' + 'data.' + attrValueMatch[1]);\n          }\n        }\n        // eslint-disable-next-line @typescript-eslint/ban-types\n        var subNode_1 = {};\n        if (isHeader) {\n          subNode_1.bindedvalue = [attrNameMatch[1] === undefined ? undefined : attributeNameFunction(this_2.headerData), attrValueMatch[1] === undefined ? undefined : attributeValueFunction(this_2.headerData)];\n        } else {\n          subNode_1.bindedvalue = [attrNameMatch[1] === undefined ? undefined : attributeNameFunction(this_2.templateData), attrValueMatch[1] === undefined ? undefined : attributeValueFunction(this_2.templateData)];\n        }\n        subNode_1.attrName = subNode_1.bindedvalue[0] === undefined ? attributeName : subNode_1.bindedvalue[0];\n        subNode_1.onChange = function (value) {\n          var bindedvalue = subNode_1.bindedvalue[1] === undefined ? element.getAttribute(subNode_1.attrName) : attributeValueFunction(value);\n          element.removeAttribute(subNode_1.attrName);\n          subNode_1.attrName = subNode_1.bindedvalue[0] === undefined ? subNode_1.attrName : attributeNameFunction(value);\n          element.setAttribute(subNode_1.attrName, bindedvalue);\n          subNode_1.bindedvalue = [subNode_1.bindedvalue[0] === undefined ? undefined : attributeNameFunction(value), subNode_1.bindedvalue[1] === undefined ? undefined : attributeValueFunction(value)];\n        };\n        var attributeValue = subNode_1.bindedvalue[1] === undefined ? element.getAttribute(attributeName) : subNode_1.bindedvalue[1];\n        element.removeAttribute(attributeName);\n        element.setAttribute(subNode_1.attrName, attributeValue);\n        this_2.updateContextData(listElement, subNode_1, isHeader);\n      }\n    };\n    var this_2 = this;\n    for (var i = 0; i < attributeNames.length; i++) {\n      _loop_2(i);\n    }\n  };\n  Virtualization.prototype.textProperty = function (element, listElement, isHeader) {\n    var regex = new RegExp('\\\\${([^}]*)}', 'g');\n    var resultantOutput = [];\n    var regexMatch;\n    while (regexMatch !== null) {\n      var match = regex.exec(element.innerText);\n      resultantOutput.push(match);\n      regexMatch = match;\n      if (regexMatch === null) {\n        resultantOutput.pop();\n      }\n    }\n    var isChildHasTextContent = Array.prototype.some.call(element.children, function (element) {\n      if (new RegExp('\\\\${([^}]*)}', 'g').exec(element.innerText)) {\n        return true;\n      } else {\n        return false;\n      }\n    });\n    if (resultantOutput && resultantOutput.length && !isChildHasTextContent) {\n      var _loop_3 = function (i) {\n        var textPropertyMatch = resultantOutput[i];\n        // eslint-disable-next-line\n        var subNode = {};\n        // eslint-disable-next-line\n        var textFunction;\n        if (textPropertyMatch[1].indexOf('?') !== -1 && textPropertyMatch[1].indexOf(':') !== -1) {\n          // tslint:disable-next-line:no-function-constructor-with-string-args\n          textFunction = new Function('data', 'return ' + textPropertyMatch[1].replace(/\\$/g, 'data.'));\n        } else {\n          // tslint:disable-next-line:no-function-constructor-with-string-args\n          textFunction = new Function('data', 'return ' + 'data.' + textPropertyMatch[1]);\n        }\n        if (isHeader) {\n          subNode.bindedvalue = textFunction(this_3.headerData);\n        } else {\n          subNode.bindedvalue = textFunction(this_3.templateData);\n        }\n        subNode.onChange = function (value) {\n          element.innerText = element.innerText.replace(subNode.bindedvalue, textFunction(value));\n          subNode.bindedvalue = textFunction(value);\n        };\n        element.innerText = element.innerText.replace(textPropertyMatch[0], subNode.bindedvalue);\n        this_3.updateContextData(listElement, subNode, isHeader);\n      };\n      var this_3 = this;\n      for (var i = 0; i < resultantOutput.length; i++) {\n        _loop_3(i);\n      }\n    }\n  };\n  Virtualization.prototype.reRenderUiVirtualization = function () {\n    this.wireScrollEvent(true);\n    if (this.listViewInstance.contentContainer) {\n      detach(this.listViewInstance.contentContainer);\n    }\n    this.listViewInstance.preRender();\n    // resetting the dom count to 0, to avoid edge case of dataSource suddenly becoming zero\n    // and then manually adding item using addItem API\n    this.domItemCount = 0;\n    this.listViewInstance.header();\n    this.listViewInstance.setLocalData();\n  };\n  Virtualization.prototype.updateUI = function (element, index, targetElement) {\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    var onChange = this.isNgTemplate() ? this.onNgChange : this.onChange;\n    if (this.listViewInstance.template || this.listViewInstance.groupTemplate) {\n      var curViewDS = this.listViewInstance.curViewDS[index];\n      // eslint-disable-next-line\n      element.dataset.uid = curViewDS[this.listViewInstance.fields.id] ?\n      // eslint-disable-next-line\n      curViewDS[this.listViewInstance.fields.id] : ListBase.generateId();\n      onChange(curViewDS, element, this);\n    } else {\n      this.updateUiContent(element, index);\n    }\n    this.changeElementAttributes(element, index);\n    if (targetElement) {\n      this.listViewInstance.ulElement.insertBefore(element, targetElement);\n    }\n  };\n  Virtualization.prototype.onNgChange = function (newData, listElement, virtualThis) {\n    // compile given target element with template for new data\n    // eslint-disable-next-line\n    var templateCompiler = compile(virtualThis.listViewInstance.template);\n    var resultElement = templateCompiler(newData);\n    while (listElement.lastChild) {\n      listElement.removeChild(listElement.lastChild);\n    }\n    listElement.appendChild(resultElement[0]);\n  };\n  Virtualization.prototype.getModuleName = function () {\n    return 'virtualization';\n  };\n  Virtualization.prototype.destroy = function () {\n    this.wireScrollEvent(true);\n  };\n  return Virtualization;\n}();\nexport { Virtualization };","map":{"version":3,"names":["classNames","EventHandler","append","isNullOrUndefined","detach","removeClass","addClass","compile","formatUnit","ListBase","DataManager","listElementCount","windowElementCount","Virtualization","instance","elementDifference","listViewInstance","prototype","isNgTemplate","templateRef","uiVirtualization","wireScrollEvent","curViewDS","firstDs","slice","ulElement","curUL","createList","createElement","listBaseOption","contentContainer","className","content","element","appendChild","listItemHeight","firstElementChild","getBoundingClientRect","height","expectedDomItemCount","ValidateItemCount","domItemCount","Object","keys","length","uiFirstIndex","uiLastIndex","otherDs","listItems","createListItemFromJson","liCollection","querySelectorAll","topElement","insertBefore","bottomElement","totalHeight","style","topElementHeight","bottomElementHeight","listDiff","uiIndicesInitialization","destroy","isWindow","onVirtualScroll","onVirtualUiScroll","bind","window","addEventListener","add","removeEventListener","updateUl","remove","updateUlContainer","e","virtualElementContainer","querySelector","liElementHeight","updateLiElementHeight","Math","round","target","documentElement","scrollTop","top","dataSourceLength","parseFloat","itemCount","innerHeight","indexOf","uiIndices","data","i","showCheckBox","fields","isChecked","activeIndices","push","enabled","disabledItemIndices","items","listItem","index","context","viewContainerRef","get","refreshItemHeight","nextSibling","getscrollerHeight","startingHeight","pageYOffset","_a","document","headerEle","scrollPosition","scroll","floor","onLongScroll","onNormalScroll","onUIScrolled","isScrollingDown","elements","updateUI","nextElementSibling","previousElementSibling","updateUiContent","curViewDs","dataSource","dataset","uid","generateId","getElementsByClassName","listItemText","innerHTML","toString","id","text","showIcon","listIcon","iconCss","textContent","groupBy","checkListWrapper","checkboxWrapper","cloneNode","isHeader","classList","checklist","checkbox","changeElementAttributes","disable","display","hiddenItemIndices","checklistElement","selected","focused","removeAttribute","checked","setAttribute","activeIndex","contains","groupListItem","findDSAndIndexFromId","ds","_this","resultJSON","getElementUID","some","getSelectedItems","dataCollection","textCollection","curViewDS_1","indices","map","curViewDS_2","indexArray","dataSource_1","undefined","selectItem","obj","resutJSON","isSelected","splice","getLiFromObjOrElement","setCheckboxLI","setSelectLI","eventArgs","trigger","removeSelect","enableItem","disableItem","showItem","hideItem","removeItem","removeUiItem","listDataSource","localData","setViewDataSource","li","Array","call","checkedItem","addUiItem","changeUiIndices","liItem","lastElementChild","previousSibling","scrollTo","increment","ind","addItem","currentItem","template","groupTemplate","itemCreated","createUIItem","findItemFromDS","createAndInjectNewItem","itemData","targetEle","args","virtualTemplate","commonTemplate","isReact","renderCheckbox","virtualCheckBox","outerHTML","div","children","checkBoxPosition","childNodes","templateElements","getElementsByTagName","groupTemplateElements","curData","headerData","templateData","item","nodes","flatTemplateNodes","groupTemplateNodes","compileTemplate","type","textProperty","classProperty","attributeProperty","onChange","newData","listElement","updateContextData","node","regex","RegExp","resultantOutput","regexMatch","match","exec","pop","_loop_1","classNameMatch","classFunction","Function","replace","subNode","bindedvalue","this_1","value","split","filter","css","newCss","i_1","attributeNames","attributes","nodeName","_loop_2","attributeName","attrNameMatch","attrValueMatch","getAttribute","attributeNameFunction","attributeValueFunction","subNode_1","this_2","attrName","attributeValue","innerText","isChildHasTextContent","_loop_3","textPropertyMatch","textFunction","this_3","reRenderUiVirtualization","preRender","header","setLocalData","targetElement","onNgChange","virtualThis","templateCompiler","resultElement","lastChild","removeChild","getModuleName"],"sources":["C:/Users/multicampus/Desktop/Fit-IT-/FrontEnd/fit-it/node_modules/@syncfusion/ej2-lists/src/list-view/virtualization.js"],"sourcesContent":["import { classNames } from './list-view';\nimport { EventHandler, append, isNullOrUndefined, detach, removeClass, addClass, compile, formatUnit } from '@syncfusion/ej2-base';\nimport { ListBase } from '../common/list-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nvar listElementCount = 1.5;\nvar windowElementCount = 3;\nvar Virtualization = /** @class */ (function () {\n    function Virtualization(instance) {\n        this.elementDifference = 0;\n        this.listViewInstance = instance;\n    }\n    /**\n     * For internal use only.\n     *\n     * @private\n     */\n    Virtualization.prototype.isNgTemplate = function () {\n        return !isNullOrUndefined(this.listViewInstance.templateRef) && typeof this.listViewInstance.templateRef !== 'string';\n    };\n    /**\n     * For internal use only.\n     *\n     * @private\n     */\n    Virtualization.prototype.uiVirtualization = function () {\n        this.wireScrollEvent(false);\n        var curViewDS = this.listViewInstance.curViewDS;\n        var firstDs = curViewDS.slice(0, 1);\n        this.listViewInstance.ulElement = this.listViewInstance.curUL = ListBase.createList(\n        // eslint-disable-next-line\n        this.listViewInstance.createElement, firstDs, this.listViewInstance.listBaseOption, null, this.listViewInstance);\n        this.listViewInstance.contentContainer = this.listViewInstance.createElement('div', { className: classNames.content });\n        this.listViewInstance.element.appendChild(this.listViewInstance.contentContainer);\n        this.listViewInstance.contentContainer.appendChild(this.listViewInstance.ulElement);\n        this.listItemHeight = this.listViewInstance.ulElement.firstElementChild.getBoundingClientRect().height;\n        this.expectedDomItemCount = this.ValidateItemCount(10000);\n        this.domItemCount = this.ValidateItemCount(Object.keys(this.listViewInstance.curViewDS).length);\n        this.uiFirstIndex = 0;\n        this.uiLastIndex = this.domItemCount - 1;\n        var otherDs = curViewDS.slice(1, this.domItemCount);\n        var listItems = ListBase.createListItemFromJson(\n        // eslint-disable-next-line\n        this.listViewInstance.createElement, otherDs, this.listViewInstance.listBaseOption, null, null, this.listViewInstance);\n        append(listItems, this.listViewInstance.ulElement);\n        this.listViewInstance.liCollection = this.listViewInstance.curUL.querySelectorAll('li');\n        this.topElement = this.listViewInstance.createElement('div');\n        this.listViewInstance.ulElement.insertBefore(this.topElement, this.listViewInstance.ulElement.firstElementChild);\n        this.bottomElement = this.listViewInstance.createElement('div');\n        this.listViewInstance.ulElement.insertBefore(this.bottomElement, null);\n        this.totalHeight = (Object.keys(curViewDS).length * this.listItemHeight) - (this.domItemCount * this.listItemHeight);\n        this.topElement.style.height = 0 + 'px';\n        this.bottomElement.style.height = this.totalHeight + 'px';\n        this.topElementHeight = 0;\n        this.bottomElementHeight = this.totalHeight;\n        this.listDiff = 0;\n        this.uiIndicesInitialization();\n    };\n    Virtualization.prototype.wireScrollEvent = function (destroy) {\n        if (!destroy) {\n            if (this.listViewInstance.isWindow) {\n                this.onVirtualScroll = this.onVirtualUiScroll.bind(this);\n                window.addEventListener('scroll', this.onVirtualScroll);\n            }\n            else {\n                EventHandler.add(this.listViewInstance.element, 'scroll', this.onVirtualUiScroll, this);\n            }\n        }\n        else {\n            if (this.listViewInstance.isWindow === true) {\n                window.removeEventListener('scroll', this.onVirtualScroll);\n                window.removeEventListener('scroll', this.updateUl);\n            }\n            else {\n                EventHandler.remove(this.listViewInstance.element, 'scroll', this.onVirtualUiScroll);\n                EventHandler.remove(this.listViewInstance.element, 'scroll', this.updateUlContainer);\n            }\n        }\n    };\n    Virtualization.prototype.updateUlContainer = function (e) {\n        var listDiff;\n        var virtualElementContainer = this.listViewInstance.ulElement.querySelector('.' + classNames.virtualElementContainer);\n        if (isNullOrUndefined(this.listViewInstance.liElementHeight)) {\n            this.listViewInstance.updateLiElementHeight();\n        }\n        if (this.listViewInstance.isWindow) {\n            // eslint-disable-next-line\n            listDiff = Math.round(e.target.documentElement.scrollTop / this.listViewInstance.liElementHeight) - 2;\n        }\n        else {\n            // eslint-disable-next-line\n            listDiff = Math.round(e.target.scrollTop / this.listViewInstance.liElementHeight) - 2;\n        }\n        if (((listDiff - 1) * this.listViewInstance.liElementHeight) < 0) {\n            virtualElementContainer.style.top = '0px';\n        }\n        else {\n            virtualElementContainer.style.top = (listDiff) * this.listViewInstance.liElementHeight + 'px';\n        }\n    };\n    Virtualization.prototype.ValidateItemCount = function (dataSourceLength) {\n        var height = parseFloat(formatUnit(this.listViewInstance.height));\n        var itemCount;\n        if (this.listViewInstance.isWindow) {\n            itemCount = Math.round((window.innerHeight / this.listItemHeight) * windowElementCount);\n        }\n        else {\n            if (typeof this.listViewInstance.height === 'string' && this.listViewInstance.height.indexOf('%') !== -1) {\n                // eslint-disable-next-line max-len\n                itemCount = Math.round((this.listViewInstance.element.getBoundingClientRect().height / this.listItemHeight) * listElementCount);\n            }\n            else {\n                itemCount = Math.round((height / this.listItemHeight) * listElementCount);\n            }\n        }\n        if (itemCount > dataSourceLength) {\n            itemCount = dataSourceLength;\n        }\n        return itemCount;\n    };\n    Virtualization.prototype.uiIndicesInitialization = function () {\n        this.uiIndices = { 'activeIndices': [], 'disabledItemIndices': [], 'hiddenItemIndices': [] };\n        var data = this.listViewInstance.curViewDS;\n        for (var i = 0; i < data.length; i++) {\n            if (this.listViewInstance.showCheckBox && data[i][this.listViewInstance.fields.isChecked]) {\n                this.uiIndices.activeIndices.push(i);\n            }\n            // eslint-disable-next-line\n            if (!isNullOrUndefined(data[i][this.listViewInstance.fields.enabled]) &&\n                !data[i][this.listViewInstance.fields.enabled]) {\n                // eslint-disable-next-line\n                (this.uiIndices.disabledItemIndices.push(i));\n            }\n        }\n        if (this.isNgTemplate()) {\n            var items = this.listViewInstance.element.querySelectorAll('.' + classNames.listItem);\n            for (var index = 0; index < items.length; index++) {\n                items[index].context = this.listViewInstance.viewContainerRef.get(index).context;\n            }\n        }\n    };\n    Virtualization.prototype.refreshItemHeight = function () {\n        if (this.listViewInstance.curViewDS.length) {\n            var curViewDS = this.listViewInstance.curViewDS;\n            this.listItemHeight = this.topElement.nextSibling.getBoundingClientRect().height;\n            this.totalHeight = (Object.keys(curViewDS).length * this.listItemHeight) - (this.domItemCount * this.listItemHeight);\n            this.bottomElementHeight = this.totalHeight;\n            this.bottomElement.style.height = this.totalHeight + 'px';\n        }\n    };\n    Virtualization.prototype.getscrollerHeight = function (startingHeight) {\n        return this.listViewInstance.isWindow ? (((pageYOffset - startingHeight) <= 0) ? 0 :\n            (pageYOffset - startingHeight)) : ((this.listViewInstance.element.scrollTop - startingHeight) <= 0) ? 0 :\n            (this.listViewInstance.element.scrollTop - startingHeight);\n    };\n    Virtualization.prototype.onVirtualUiScroll = function (e) {\n        var _a;\n        var startingHeight;\n        if (this.listViewInstance.isWindow) {\n            startingHeight = this.listViewInstance.ulElement.getBoundingClientRect().top -\n                document.documentElement.getBoundingClientRect().top;\n        }\n        else {\n            startingHeight = this.listViewInstance.headerEle ? this.listViewInstance.headerEle.getBoundingClientRect().height : 0;\n        }\n        this.scrollPosition = isNullOrUndefined(this.scrollPosition) ? 0 : this.scrollPosition;\n        var scroll = this.getscrollerHeight(startingHeight);\n        this.topElementHeight = this.listItemHeight * Math.floor(scroll / this.listItemHeight);\n        this.bottomElementHeight = this.totalHeight - this.topElementHeight;\n        _a = scroll <= this.totalHeight ?\n            [this.topElementHeight, this.bottomElementHeight] : [this.totalHeight, 0], this.topElementHeight = _a[0], this.bottomElementHeight = _a[1];\n        if (this.topElementHeight !== parseFloat(this.topElement.style.height)) {\n            this.topElement.style.height = this.topElementHeight + 'px';\n            this.bottomElement.style.height = this.bottomElementHeight + 'px';\n            if (scroll > this.scrollPosition) {\n                var listDiff = Math.round(((this.topElementHeight / this.listItemHeight) - this.listDiff));\n                if (listDiff > (this.expectedDomItemCount + 5)) {\n                    this.onLongScroll(listDiff, true);\n                }\n                else {\n                    this.onNormalScroll(listDiff, true);\n                }\n            }\n            else {\n                var listDiff = Math.round((this.listDiff - (this.topElementHeight / this.listItemHeight)));\n                if (listDiff > (this.expectedDomItemCount + 5)) {\n                    this.onLongScroll(listDiff, false);\n                }\n                else {\n                    this.onNormalScroll(listDiff, false);\n                }\n            }\n        }\n        this.listDiff = Math.round(this.topElementHeight / this.listItemHeight);\n        if (typeof this.listViewInstance.onUIScrolled === 'function') {\n            this.listViewInstance.onUIScrolled();\n        }\n        this.scrollPosition = scroll;\n    };\n    Virtualization.prototype.onLongScroll = function (listDiff, isScrollingDown) {\n        var index = isScrollingDown ? (this.uiFirstIndex + listDiff) : (this.uiFirstIndex - listDiff);\n        var elements = this.listViewInstance.ulElement.querySelectorAll('li');\n        for (var i = 0; i < elements.length; i++) {\n            this.updateUI(elements[i], index);\n            index++;\n        }\n        this.uiLastIndex = isScrollingDown ? (this.uiLastIndex + listDiff) : (this.uiLastIndex - listDiff);\n        this.uiFirstIndex = isScrollingDown ? (this.uiFirstIndex + listDiff) : (this.uiFirstIndex - listDiff);\n    };\n    Virtualization.prototype.onNormalScroll = function (listDiff, isScrollingDown) {\n        if (isScrollingDown) {\n            for (var i = 0; i < listDiff; i++) {\n                var index = ++this.uiLastIndex;\n                this.updateUI(this.topElement.nextElementSibling, index, this.bottomElement);\n                this.uiFirstIndex++;\n            }\n        }\n        else {\n            for (var i = 0; i < listDiff; i++) {\n                var index = --this.uiFirstIndex;\n                var target = this.topElement.nextSibling;\n                this.updateUI(this.bottomElement.previousElementSibling, index, target);\n                this.uiLastIndex--;\n            }\n        }\n    };\n    Virtualization.prototype.updateUiContent = function (element, index) {\n        // eslint-disable-next-line\n        var curViewDs = this.listViewInstance.curViewDS;\n        if (typeof this.listViewInstance.dataSource[0] === 'string' ||\n            typeof this.listViewInstance.dataSource[0] === 'number') {\n            element.dataset.uid = ListBase.generateId();\n            element.getElementsByClassName(classNames.listItemText)[0].innerHTML =\n                this.listViewInstance.curViewDS[index].toString();\n        }\n        else {\n            // eslint-disable-next-line\n            element.dataset.uid = (curViewDs[index][this.listViewInstance.fields.id]) ?\n                // eslint-disable-next-line\n                (curViewDs[index][this.listViewInstance.fields.id]) : ListBase.generateId();\n            element.getElementsByClassName(classNames.listItemText)[0].innerHTML =\n                // eslint-disable-next-line\n                (curViewDs[index][this.listViewInstance.fields.text]);\n        }\n        if (this.listViewInstance.showIcon) {\n            if (element.querySelector('.' + classNames.listIcon)) {\n                detach(element.querySelector('.' + classNames.listIcon));\n            }\n            if (this.listViewInstance.curViewDS[index][this.listViewInstance.fields.iconCss]) {\n                var textContent = element.querySelector('.' + classNames.textContent);\n                var target = this.listViewInstance.createElement('div', {\n                    className: classNames.listIcon + ' ' +\n                        this.listViewInstance.curViewDS[index][this.listViewInstance.fields.iconCss]\n                });\n                textContent.insertBefore(target, element.querySelector('.' + classNames.listItemText));\n            }\n        }\n        if (this.listViewInstance.showCheckBox && this.listViewInstance.fields.groupBy) {\n            if (!this.checkListWrapper) {\n                this.checkListWrapper = this.listViewInstance.curUL.querySelector('.' + classNames.checkboxWrapper).cloneNode(true);\n            }\n            var textContent = element.querySelector('.' + classNames.textContent);\n            if (this.listViewInstance.curViewDS[index].isHeader) {\n                if (element.querySelector('.' + classNames.checkboxWrapper)) {\n                    element.classList.remove(classNames.checklist);\n                    textContent.classList.remove(classNames.checkbox);\n                    detach(element.querySelector('.' + classNames.checkboxWrapper));\n                }\n            }\n            else {\n                if (!element.querySelector('.' + classNames.checkboxWrapper)) {\n                    element.classList.add(classNames.checklist);\n                    textContent.classList.add(classNames.checkbox);\n                    textContent.insertBefore(this.checkListWrapper.cloneNode(true), element.querySelector('.' + classNames.listItemText));\n                }\n            }\n        }\n    };\n    Virtualization.prototype.changeElementAttributes = function (element, index) {\n        element.classList.remove(classNames.disable);\n        if (this.uiIndices.disabledItemIndices.length && this.uiIndices.disabledItemIndices.indexOf(index) !== -1) {\n            element.classList.add(classNames.disable);\n        }\n        element.style.display = '';\n        if (this.uiIndices.hiddenItemIndices.length && this.uiIndices.hiddenItemIndices.indexOf(index) !== -1) {\n            element.style.display = 'none';\n        }\n        if (this.listViewInstance.showCheckBox) {\n            var checklistElement = element.querySelector('.' + classNames.checkboxWrapper);\n            element.classList.remove(classNames.selected);\n            element.classList.remove(classNames.focused);\n            if (checklistElement) {\n                checklistElement.removeAttribute('aria-checked');\n                checklistElement.firstElementChild.classList.remove(classNames.checked);\n            }\n            if (this.uiIndices.activeIndices.length && this.uiIndices.activeIndices.indexOf(index) !== -1 &&\n                !this.listViewInstance.curUL.querySelector(classNames.selected)) {\n                element.classList.add(classNames.selected);\n                checklistElement.firstElementChild.classList.add(classNames.checked);\n                checklistElement.setAttribute('aria-checked', 'true');\n                if (this.activeIndex === index) {\n                    element.classList.add(classNames.focused);\n                }\n            }\n        }\n        else {\n            element.classList.remove(classNames.selected);\n            element.removeAttribute('aria-selected');\n            if (!isNullOrUndefined(this.activeIndex) && this.activeIndex === index &&\n                !this.listViewInstance.curUL.querySelector(classNames.selected)) {\n                element.classList.add(classNames.selected);\n                element.setAttribute('aria-selected', 'true');\n            }\n        }\n        if (this.listViewInstance.fields.groupBy) {\n            if (this.listViewInstance.curViewDS[index].isHeader) {\n                if (element.classList.contains(classNames.listItem)) {\n                    element.classList.remove(classNames.listItem);\n                    element.setAttribute('role', 'group');\n                    element.classList.add(classNames.groupListItem);\n                }\n            }\n            else {\n                if (element.classList.contains(classNames.groupListItem)) {\n                    element.classList.remove(classNames.groupListItem);\n                    element.setAttribute('role', 'listitem');\n                    element.classList.add(classNames.listItem);\n                }\n            }\n        }\n    };\n    Virtualization.prototype.findDSAndIndexFromId = function (ds, fields) {\n        var _this = this;\n        var resultJSON = {};\n        fields = this.listViewInstance.getElementUID(fields);\n        if (!isNullOrUndefined(fields)) {\n            ds.some(function (data, index) {\n                if ((fields[_this.listViewInstance.fields.id] &&\n                    // eslint-disable-next-line\n                    fields[_this.listViewInstance.fields.id]\n                        // eslint-disable-next-line\n                        === (data[_this.listViewInstance.fields.id] && data[_this.listViewInstance.fields.id]) || fields === data)) {\n                    resultJSON.index = index;\n                    resultJSON.data = data;\n                    return true;\n                }\n                else {\n                    return false;\n                }\n            });\n        }\n        return resultJSON;\n    };\n    Virtualization.prototype.getSelectedItems = function () {\n        var _this = this;\n        if (!isNullOrUndefined(this.activeIndex) || (this.listViewInstance.showCheckBox && this.uiIndices.activeIndices.length)) {\n            var dataCollection = [];\n            var textCollection = [];\n            if (typeof this.listViewInstance.dataSource[0] === 'string' ||\n                typeof this.listViewInstance.dataSource[0] === 'number') {\n                var curViewDS_1 = this.listViewInstance.curViewDS;\n                if (this.listViewInstance.showCheckBox) {\n                    var indices = this.uiIndices.activeIndices;\n                    for (var i = 0; i < indices.length; i++) {\n                        dataCollection.push(curViewDS_1[indices[i]]);\n                    }\n                    return {\n                        text: dataCollection,\n                        // eslint-disable-next-line\n                        data: dataCollection,\n                        index: this.uiIndices.activeIndices.map(function (index) {\n                            return _this.listViewInstance.dataSource.indexOf(curViewDS_1[index]);\n                        })\n                    };\n                }\n                else {\n                    return {\n                        text: curViewDS_1[this.activeIndex],\n                        data: curViewDS_1[this.activeIndex],\n                        index: this.listViewInstance.dataSource.indexOf(curViewDS_1[this.activeIndex])\n                    };\n                }\n            }\n            else {\n                var curViewDS_2 = this.listViewInstance.curViewDS;\n                var text = this.listViewInstance.fields.text;\n                if (this.listViewInstance.showCheckBox) {\n                    var indexArray = this.uiIndices.activeIndices;\n                    for (var i = 0; i < indexArray.length; i++) {\n                        textCollection.push(curViewDS_2[indexArray[i]][text]);\n                        // eslint-disable-next-line\n                        dataCollection.push(curViewDS_2[indexArray[i]]);\n                    }\n                    // eslint-disable-next-line\n                    var dataSource_1 = this.listViewInstance.dataSource instanceof DataManager\n                        ? curViewDS_2 : this.listViewInstance.dataSource;\n                    return {\n                        text: textCollection,\n                        // eslint-disable-next-line\n                        data: dataCollection,\n                        index: this.uiIndices.activeIndices.map(function (index) {\n                            return dataSource_1.indexOf(curViewDS_2[index]);\n                        })\n                    };\n                }\n                else {\n                    // eslint-disable-next-line\n                    var dataSource = this.listViewInstance.dataSource instanceof DataManager\n                        ? curViewDS_2 : this.listViewInstance.dataSource;\n                    return {\n                        text: curViewDS_2[this.activeIndex][this.listViewInstance.fields.text],\n                        // eslint-disable-next-line\n                        data: curViewDS_2[this.activeIndex],\n                        index: dataSource.indexOf(curViewDS_2[this.activeIndex])\n                    };\n                }\n            }\n        }\n        else {\n            return undefined;\n        }\n    };\n    Virtualization.prototype.selectItem = function (obj) {\n        // eslint-disable-next-line\n        var resutJSON = this.findDSAndIndexFromId(this.listViewInstance.curViewDS, obj);\n        if (Object.keys(resutJSON).length) {\n            var isSelected = this.activeIndex === resutJSON.index;\n            var isChecked = void 0;\n            this.activeIndex = resutJSON.index;\n            if (this.listViewInstance.showCheckBox) {\n                if (this.uiIndices.activeIndices.indexOf(resutJSON.index) === -1) {\n                    isChecked = true;\n                    this.uiIndices.activeIndices.push(resutJSON.index);\n                }\n                else {\n                    isChecked = false;\n                    this.uiIndices.activeIndices.splice(this.uiIndices.activeIndices.indexOf(resutJSON.index), 1);\n                }\n                if (this.listViewInstance.curUL.querySelector('.' + classNames.focused)) {\n                    this.listViewInstance.curUL.querySelector('.' + classNames.focused).classList.remove(classNames.focused);\n                }\n            }\n            if (this.listViewInstance.getLiFromObjOrElement(obj)) {\n                if (this.listViewInstance.showCheckBox) {\n                    this.listViewInstance.setCheckboxLI(this.listViewInstance.getLiFromObjOrElement(obj));\n                }\n                else {\n                    this.listViewInstance.setSelectLI(this.listViewInstance.getLiFromObjOrElement(obj));\n                }\n            }\n            else {\n                // eslint-disable-next-line\n                var eventArgs = void 0;\n                if (typeof this.listViewInstance.dataSource[0] === 'string' ||\n                    typeof this.listViewInstance.dataSource[0] === 'number') {\n                    eventArgs = {\n                        text: this.listViewInstance.curViewDS[this.activeIndex],\n                        data: this.listViewInstance.curViewDS[this.activeIndex],\n                        index: this.activeIndex\n                    };\n                }\n                else {\n                    var curViewDS = this.listViewInstance.curViewDS;\n                    eventArgs = {\n                        text: curViewDS[this.activeIndex][this.listViewInstance.fields.text],\n                        data: curViewDS[this.activeIndex],\n                        index: this.activeIndex\n                    };\n                }\n                if (this.listViewInstance.showCheckBox) {\n                    eventArgs.isChecked = isChecked;\n                    this.listViewInstance.trigger('select', eventArgs);\n                }\n                else if (!isSelected) {\n                    this.listViewInstance.removeSelect();\n                    this.listViewInstance.trigger('select', eventArgs);\n                }\n            }\n        }\n        else if (isNullOrUndefined(obj) && !this.listViewInstance.showCheckBox) {\n            this.listViewInstance.removeSelect();\n            this.activeIndex = undefined;\n        }\n    };\n    Virtualization.prototype.enableItem = function (obj) {\n        // eslint-disable-next-line\n        var resutJSON = this.findDSAndIndexFromId(this.listViewInstance.curViewDS, obj);\n        if (Object.keys(resutJSON).length) {\n            this.uiIndices.disabledItemIndices.splice(this.uiIndices.disabledItemIndices.indexOf(resutJSON.index), 1);\n        }\n    };\n    Virtualization.prototype.disableItem = function (obj) {\n        // eslint-disable-next-line\n        var resutJSON = this.findDSAndIndexFromId(this.listViewInstance.curViewDS, obj);\n        if (Object.keys(resutJSON).length && this.uiIndices.disabledItemIndices.indexOf(resutJSON.index) === -1) {\n            this.uiIndices.disabledItemIndices.push(resutJSON.index);\n        }\n    };\n    Virtualization.prototype.showItem = function (obj) {\n        // eslint-disable-next-line\n        var resutJSON = this.findDSAndIndexFromId(this.listViewInstance.curViewDS, obj);\n        if (Object.keys(resutJSON).length) {\n            this.uiIndices.hiddenItemIndices.splice(this.uiIndices.hiddenItemIndices.indexOf(resutJSON.index), 1);\n        }\n    };\n    Virtualization.prototype.hideItem = function (obj) {\n        // eslint-disable-next-line\n        var resutJSON = this.findDSAndIndexFromId(this.listViewInstance.curViewDS, obj);\n        if (Object.keys(resutJSON).length && this.uiIndices.hiddenItemIndices.indexOf(resutJSON.index) === -1) {\n            this.uiIndices.hiddenItemIndices.push(resutJSON.index);\n        }\n    };\n    Virtualization.prototype.removeItem = function (obj) {\n        var dataSource;\n        var curViewDS = this.listViewInstance.curViewDS;\n        // eslint-disable-next-line\n        var resutJSON = this.findDSAndIndexFromId(curViewDS, obj);\n        // eslint-disable-next-line\n        if (Object.keys(resutJSON).length) {\n            dataSource = resutJSON.data;\n            if (curViewDS[resutJSON.index - 1] &&\n                curViewDS[resutJSON.index - 1].isHeader &&\n                (curViewDS[resutJSON.index - 1])\n                    .items.length === 1) {\n                this.removeUiItem(resutJSON.index - 1);\n                this.removeUiItem(resutJSON.index - 1);\n            }\n            else {\n                this.removeUiItem(resutJSON.index);\n            }\n        }\n        var listDataSource = this.listViewInstance.dataSource instanceof DataManager\n            ? this.listViewInstance.localData : this.listViewInstance.dataSource;\n        var index = listDataSource.indexOf(dataSource);\n        if (index !== -1) {\n            listDataSource.splice(index, 1);\n            this.listViewInstance.setViewDataSource(listDataSource);\n        }\n        // recollect all the list item into collection\n        this.listViewInstance.liCollection =\n            this.listViewInstance.curUL.querySelectorAll('li');\n    };\n    // eslint-disable-next-line\n    Virtualization.prototype.setCheckboxLI = function (li, e) {\n        var index = Array.prototype.indexOf.call(this.listViewInstance.curUL.querySelectorAll('li'), li) + this.uiFirstIndex;\n        this.activeIndex = Array.prototype.indexOf.call(this.listViewInstance.curUL.querySelectorAll('li'), li) + this.uiFirstIndex;\n        if (li.classList.contains(classNames.selected)) {\n            if (this.uiIndices.activeIndices.indexOf(index) === -1) {\n                this.uiIndices.activeIndices.push(index);\n            }\n        }\n        else {\n            this.uiIndices.activeIndices.splice(this.uiIndices.activeIndices.indexOf(index), 1);\n        }\n    };\n    // eslint-disable-next-line\n    Virtualization.prototype.setSelectLI = function (li, e) {\n        this.activeIndex = Array.prototype.indexOf.call(this.listViewInstance.curUL.querySelectorAll('li'), li) + this.uiFirstIndex;\n    };\n    Virtualization.prototype.checkedItem = function (checked) {\n        if (checked) {\n            this.uiIndices.activeIndices = [];\n            this.activeIndex = undefined;\n            var data = this.listViewInstance.curViewDS;\n            for (var index = 0; index < data.length; index++) {\n                if (!data[index].isHeader) {\n                    this.uiIndices.activeIndices.push(index);\n                }\n            }\n        }\n        else {\n            this.activeIndex = undefined;\n            this.uiIndices.activeIndices = [];\n        }\n    };\n    Virtualization.prototype.addUiItem = function (index) {\n        // virtually new add list item based on the scollbar position\n        // if the scroll bar is at the top, just pretend the new item has been added since no UI\n        // change is required for the item that has been added at last but when scroll bar is at the bottom\n        // just detach top and inject into bottom to mimic new item is added\n        var curViewDs = this.listViewInstance.curViewDS;\n        this.changeUiIndices(index, true);\n        if (this.activeIndex && this.activeIndex >= index) {\n            this.activeIndex++;\n        }\n        if (this.listViewInstance.showCheckBox &&\n            curViewDs[index][this.listViewInstance.fields.isChecked]) {\n            this.uiIndices.activeIndices.push(index);\n        }\n        if (!parseFloat(this.bottomElement.style.height) && !parseFloat(this.topElement.style.height)) {\n            this.bottomElement.style.height = parseFloat(this.bottomElement.style.height) + this.listItemHeight + 'px';\n        }\n        if (parseFloat(this.bottomElement.style.height)) {\n            var liItem = this.listViewInstance.curUL.lastElementChild.previousSibling;\n            var target = this.listViewInstance.getLiFromObjOrElement(curViewDs[index + 1]) ||\n                this.listViewInstance.getLiFromObjOrElement(curViewDs[index + 2]);\n            if (target) {\n                this.bottomElement.style.height = parseFloat(this.bottomElement.style.height) + this.listItemHeight + 'px';\n                this.updateUI(liItem, index, target);\n            }\n        }\n        else {\n            var liItem = this.listViewInstance.curUL.firstElementChild.nextSibling;\n            var target = void 0;\n            if ((Object.keys(this.listViewInstance.curViewDS).length - 1) === index) {\n                target = this.listViewInstance.curUL.lastElementChild;\n            }\n            else {\n                target = this.listViewInstance.getLiFromObjOrElement(curViewDs[index + 1]) ||\n                    this.listViewInstance.getLiFromObjOrElement(curViewDs[index + 2]);\n            }\n            this.topElement.style.height = parseFloat(this.topElement.style.height) + this.listItemHeight + 'px';\n            this.uiFirstIndex++;\n            this.uiLastIndex++;\n            if (target) {\n                this.updateUI(liItem, index, target);\n                if (this.listViewInstance.isWindow === true) {\n                    window.scrollTo(0, (pageYOffset + this.listItemHeight));\n                }\n                else {\n                    this.listViewInstance.element.scrollTop += this.listItemHeight;\n                }\n            }\n        }\n        this.totalHeight += this.listItemHeight;\n        this.listDiff = Math.round(parseFloat(this.topElement.style.height) / this.listItemHeight);\n    };\n    Virtualization.prototype.removeUiItem = function (index) {\n        this.totalHeight -= this.listItemHeight;\n        var curViewDS = this.listViewInstance.curViewDS[index];\n        var liItem = this.listViewInstance.getLiFromObjOrElement(curViewDS);\n        this.listViewInstance.curViewDS.splice(index, 1);\n        if (this.activeIndex && this.activeIndex >= index) {\n            this.activeIndex--;\n        }\n        if (liItem) {\n            if (this.domItemCount > Object.keys(this.listViewInstance.curViewDS).length) {\n                detach(liItem);\n                this.domItemCount--;\n                this.uiLastIndex--;\n                this.totalHeight = 0;\n            }\n            else {\n                if (liItem.classList.contains(classNames.disable)) {\n                    liItem.classList.remove(classNames.disable);\n                    this.uiIndices.disabledItemIndices.splice(this.uiIndices.disabledItemIndices.indexOf(index), 1);\n                }\n                if (liItem.style.display === 'none') {\n                    liItem.style.display = '';\n                    this.uiIndices.hiddenItemIndices.splice(this.uiIndices.hiddenItemIndices.indexOf(index), 1);\n                }\n                if (this.listViewInstance.showCheckBox && liItem.classList.contains(classNames.selected)) {\n                    this.listViewInstance.removeSelect();\n                    this.uiIndices.activeIndices.splice(this.uiIndices.activeIndices.indexOf(index), 1);\n                    var checklistElement = liItem.querySelector('.' + classNames.checkboxWrapper);\n                    checklistElement.removeAttribute('aria-checked');\n                    checklistElement.firstElementChild.classList.remove(classNames.checked);\n                    if (liItem.classList.contains(classNames.focused)) {\n                        liItem.classList.remove(classNames.focused);\n                        this.activeIndex = undefined;\n                    }\n                }\n                else if (liItem.classList.contains(classNames.selected)) {\n                    this.listViewInstance.removeSelect();\n                    this.activeIndex = undefined;\n                }\n                if (!parseFloat(this.bottomElement.style.height) && !parseFloat(this.topElement.style.height)) {\n                    this.updateUI(liItem, this.uiLastIndex, this.bottomElement);\n                }\n                else if (parseFloat(this.bottomElement.style.height)) {\n                    this.bottomElement.style.height = parseFloat(this.bottomElement.style.height) - this.listItemHeight + 'px';\n                    this.updateUI(liItem, this.uiLastIndex, this.bottomElement);\n                }\n                else {\n                    this.topElement.style.height = parseFloat(this.topElement.style.height) - this.listItemHeight + 'px';\n                    this.updateUI(liItem, (this.uiFirstIndex - 1), this.topElement.nextSibling);\n                    this.uiLastIndex--;\n                    this.uiFirstIndex--;\n                }\n            }\n        }\n        this.changeUiIndices(index, false);\n        this.listDiff = Math.round(parseFloat(this.topElement.style.height) / this.listItemHeight);\n    };\n    Virtualization.prototype.changeUiIndices = function (index, increment) {\n        var keys = Object.keys(this.uiIndices);\n        for (var ind = 0; ind < keys.length; ind++) {\n            this.uiIndices[keys[ind]] = this.uiIndices[keys[ind]].map(function (i) {\n                if (i >= index) {\n                    return increment ? ++i : --i;\n                }\n                else {\n                    return i;\n                }\n            });\n        }\n    };\n    Virtualization.prototype.addItem = function (data, fields, dataSource) {\n        for (var i = 0; i < data.length; i++) {\n            var currentItem = data[i];\n            // push the given data to main data array\n            dataSource.push(currentItem);\n            // recalculate all the group data or other datasource related things\n            this.listViewInstance.setViewDataSource(dataSource);\n            // render list items for first time due to no datasource present earlier\n            if (!this.domItemCount) {\n                // fresh rendering for first time\n                if ((this.listViewInstance.template || this.listViewInstance.groupTemplate) && !this.isNgTemplate()) {\n                    this.listViewInstance.listBaseOption.template = null;\n                    this.listViewInstance.listBaseOption.groupTemplate = null;\n                    this.listViewInstance.listBaseOption.itemCreated = this.createUIItem.bind(this);\n                }\n                this.uiVirtualization();\n                // when expected expected DOM count doesn't meet the condition we need to create and inject new item into DOM\n            }\n            else if (this.domItemCount < this.expectedDomItemCount) {\n                var ds = this.listViewInstance.findItemFromDS(dataSource, fields);\n                if (ds instanceof Array) {\n                    if (this.listViewInstance.ulElement) {\n                        var index = this.listViewInstance.curViewDS.indexOf(currentItem);\n                        // inject new list item into DOM\n                        this.createAndInjectNewItem(currentItem, index);\n                        // check for group header item\n                        var curViewDS = this.listViewInstance.curViewDS[index - 1];\n                        if (curViewDS && curViewDS.isHeader && curViewDS.items.length === 1) {\n                            // target group item index in datasource\n                            --index;\n                            // inject new group header into DOM for previously created list item\n                            this.createAndInjectNewItem(curViewDS, index);\n                        }\n                    }\n                    // recollect all the list item into collection\n                    this.listViewInstance.liCollection =\n                        this.listViewInstance.curUL.querySelectorAll('li');\n                }\n            }\n            else {\n                // eslint-disable-next-line\n                var index = this.listViewInstance.curViewDS.indexOf(currentItem);\n                // virtually new add list item based on the scollbar position\n                this.addUiItem(index);\n                // check for group header item needs to be added\n                var curViewDS = this.listViewInstance.curViewDS[index - 1];\n                if (curViewDS && curViewDS.isHeader && curViewDS.items.length === 1) {\n                    this.addUiItem(index - 1);\n                }\n            }\n        }\n    };\n    Virtualization.prototype.createAndInjectNewItem = function (itemData, index) {\n        // generate li item for given datasource\n        var target;\n        var li = ListBase.createListItemFromJson(this.listViewInstance.createElement, \n        // eslint-disable-next-line\n        [itemData], this.listViewInstance.listBaseOption, null, null, this.listViewInstance);\n        // check for target element whether to insert before last item or group item\n        if ((Object.keys(this.listViewInstance.curViewDS).length - 1) === index) {\n            target = this.listViewInstance.curUL.lastElementChild;\n        }\n        else {\n            // target group header's first child item to append its header\n            target = this.listViewInstance.getLiFromObjOrElement(this.listViewInstance.curViewDS[index + 1]) ||\n                this.listViewInstance.getLiFromObjOrElement(this.listViewInstance.curViewDS[index + 2]);\n        }\n        if (this.listViewInstance.fields.groupBy && this.listViewInstance.curViewDS[index + 1] && this.listViewInstance.curViewDS[index + 1].isHeader) {\n            var targetEle = this.listViewInstance.getLiFromObjOrElement(this.listViewInstance.curViewDS[index - 1]);\n            if (targetEle) {\n                target = targetEle.nextElementSibling;\n            }\n        }\n        // insert before the target element\n        this.listViewInstance.ulElement.insertBefore(li[0], target);\n        // increment internal DOM count, last index count for new element\n        this.domItemCount++;\n        if (this.bottomElementHeight <= 0) {\n            this.uiLastIndex++;\n        }\n        // recalculate the current item height, to avoid jumpy scroller\n        this.refreshItemHeight();\n    };\n    Virtualization.prototype.createUIItem = function (args) {\n        var virtualTemplate = this.listViewInstance.template;\n        var template = this.listViewInstance.createElement('div');\n        var commonTemplate = '<div class=\"e-text-content\" role=\"presentation\"> ' +\n            '<span class=\"e-list-text\"> ${' + this.listViewInstance.fields.text + '} </span></div>';\n        if (this.listViewInstance.isReact) {\n            commonTemplate = null;\n        }\n        if (this.listViewInstance.showCheckBox) {\n            // eslint-disable-next-line\n            this.listViewInstance.renderCheckbox(args);\n            if ((!isNullOrUndefined(this.listViewInstance.virtualCheckBox)) &&\n                (!isNullOrUndefined(this.listViewInstance.virtualCheckBox.outerHTML))) {\n                var div = document.createElement('div');\n                div.innerHTML = this.listViewInstance.template || commonTemplate;\n                if (div.children && div.children[0]) {\n                    div.children[0].classList.add('e-checkbox');\n                    if (this.listViewInstance.checkBoxPosition === 'Left') {\n                        div.children[0].classList.add('e-checkbox-left');\n                    }\n                    else {\n                        div.children[0].classList.add('e-checkbox-right');\n                    }\n                    if (this.listViewInstance.checkBoxPosition === 'Left') {\n                        div.children[0].insertBefore(this.listViewInstance.virtualCheckBox, div.childNodes[0].children[0]);\n                    }\n                    else {\n                        div.children[0].appendChild(this.listViewInstance.virtualCheckBox);\n                    }\n                    this.listViewInstance.template = div.innerHTML;\n                }\n            }\n            template.innerHTML = this.listViewInstance.template;\n            this.listViewInstance.template = virtualTemplate;\n        }\n        else {\n            template.innerHTML = this.listViewInstance.template || commonTemplate;\n        }\n        // eslint-disable-next-line\n        var templateElements = template.getElementsByTagName('*');\n        var groupTemplate = this.listViewInstance.createElement('div');\n        if (this.listViewInstance.fields.groupBy) {\n            groupTemplate.innerHTML = this.listViewInstance.groupTemplate || commonTemplate;\n        }\n        // eslint-disable-next-line\n        var groupTemplateElements = groupTemplate.getElementsByTagName('*');\n        if (args.curData.isHeader) {\n            this.headerData = args.curData;\n        }\n        this.templateData = args.curData.isHeader ? args.curData.items[0] :\n            args.curData;\n        if (!this.listViewInstance.isReact || (typeof this.listViewInstance.template == \"string\" && !args.item.classList.contains(\"e-list-group-item\")) ||\n            (typeof this.listViewInstance.groupTemplate == \"string\" && args.item.classList.contains(\"e-list-group-item\"))) {\n            args.item.innerHTML = '';\n        }\n        args.item.context = { data: args.curData, nodes: { flatTemplateNodes: [], groupTemplateNodes: [] } };\n        for (var i = 0; i < templateElements.length; i++) {\n            this.compileTemplate(templateElements[i], args.item, false);\n        }\n        for (var i = 0; i < groupTemplateElements.length; i++) {\n            this.compileTemplate(groupTemplateElements[i], args.item, true);\n        }\n        args.item.context.template = args.curData.isHeader ? template.firstElementChild :\n            groupTemplate.firstElementChild;\n        args.item.context.type = args.curData.isHeader ? 'flatList' : 'groupList';\n        var element = args.curData.isHeader ? groupTemplate : template;\n        if (element.firstElementChild) {\n            args.item.insertBefore(element.firstElementChild, null);\n        }\n    };\n    Virtualization.prototype.compileTemplate = function (element, item, isHeader) {\n        this.textProperty(element, item, isHeader);\n        this.classProperty(element, item, isHeader);\n        this.attributeProperty(element, item, isHeader);\n    };\n    Virtualization.prototype.onChange = function (newData, listElement) {\n        listElement.context.data = newData;\n        // eslint-disable-next-line max-len\n        var groupTemplateNodes = listElement.context.nodes.groupTemplateNodes;\n        // eslint-disable-next-line max-len\n        var flatTemplateNodes = listElement.context.nodes.flatTemplateNodes;\n        // eslint-disable-next-line\n        if (!isNullOrUndefined(newData.isHeader) && newData.isHeader && listElement.context.type === 'groupList') {\n            // eslint-disable-next-line\n            var element = listElement.firstElementChild;\n            detach(listElement.firstElementChild);\n            listElement.insertBefore(listElement.context.template, null);\n            listElement.context.template = element;\n            listElement.context.type = 'flatList';\n            for (var i = 0; i < groupTemplateNodes.length; i++) {\n                // eslint-disable-next-line\n                groupTemplateNodes[i].onChange(newData);\n            }\n        }\n        else if (!newData.isHeader && listElement.context.type === 'flatList') {\n            var element = listElement.firstElementChild;\n            detach(listElement.firstElementChild);\n            listElement.insertBefore(listElement.context.template, null);\n            listElement.context.template = element;\n            listElement.context.type = 'groupList';\n            for (var i = 0; i < flatTemplateNodes.length; i++) {\n                // eslint-disable-next-line\n                flatTemplateNodes[i].onChange(newData);\n            }\n        }\n        else if (!newData.isHeader) {\n            for (var i = 0; i < flatTemplateNodes.length; i++) {\n                // eslint-disable-next-line\n                flatTemplateNodes[i].onChange(newData);\n            }\n        }\n        else {\n            for (var i = 0; i < groupTemplateNodes.length; i++) {\n                // eslint-disable-next-line\n                groupTemplateNodes[i].onChange(newData);\n            }\n        }\n    };\n    // eslint-disable-next-line\n    Virtualization.prototype.updateContextData = function (listElement, node, isHeader) {\n        if (isHeader) {\n            listElement.context.nodes.groupTemplateNodes.push(node);\n        }\n        else {\n            listElement.context.nodes.flatTemplateNodes.push(node);\n        }\n    };\n    Virtualization.prototype.classProperty = function (element, listElement, isHeader) {\n        var regex = new RegExp('\\\\${([^}]*)}', 'g');\n        var resultantOutput = [];\n        var regexMatch;\n        while (regexMatch !== null) {\n            var match = regex.exec(element.className);\n            resultantOutput.push(match);\n            regexMatch = match;\n            if (regexMatch === null) {\n                resultantOutput.pop();\n            }\n        }\n        if (resultantOutput && resultantOutput.length) {\n            var _loop_1 = function (i) {\n                var classNameMatch = resultantOutput[i];\n                // eslint-disable-next-line\n                var classFunction;\n                if (classNameMatch[1].indexOf('?') !== -1 && classNameMatch[1].indexOf(':') !== -1) {\n                    // tslint:disable-next-line:no-function-constructor-with-string-args\n                    classFunction = new Function('data', 'return ' + classNameMatch[1].replace(/\\$/g, 'data.'));\n                }\n                else {\n                    // tslint:disable-next-line:no-function-constructor-with-string-args\n                    classFunction = new Function('data', 'return ' + 'data.' + classNameMatch[1]);\n                }\n                // eslint-disable-next-line\n                var subNode = {};\n                if (isHeader) {\n                    subNode.bindedvalue = classFunction(this_1.headerData);\n                }\n                else {\n                    subNode.bindedvalue = classFunction(this_1.templateData);\n                }\n                subNode.onChange = function (value) {\n                    if (subNode.bindedvalue) {\n                        removeClass([element], subNode.bindedvalue.split(' ').filter(function (css) { return css; }));\n                    }\n                    var newCss = classFunction(value);\n                    if (newCss) {\n                        addClass([element], (newCss).split(' ').filter(function (css) { return css; }));\n                    }\n                    subNode.bindedvalue = newCss;\n                };\n                var className = classNameMatch[0].split(' ');\n                for (var i_1 = 0; i_1 < className.length; i_1++) {\n                    element.classList.remove(className[i_1]);\n                }\n                if (subNode.bindedvalue) {\n                    addClass([element], subNode.bindedvalue.split(' ').filter(function (css) { return css; }));\n                }\n                this_1.updateContextData(listElement, subNode, isHeader);\n            };\n            var this_1 = this;\n            for (var i = 0; i < resultantOutput.length; i++) {\n                _loop_1(i);\n            }\n        }\n    };\n    Virtualization.prototype.attributeProperty = function (element, listElement, isHeader) {\n        var attributeNames = [];\n        for (var i = 0; i < element.attributes.length; i++) {\n            attributeNames.push(element.attributes[i].nodeName);\n        }\n        if (attributeNames.indexOf('class') !== -1) {\n            attributeNames.splice(attributeNames.indexOf('class'), 1);\n        }\n        var _loop_2 = function (i) {\n            var attributeName = attributeNames[i];\n            var attrNameMatch = new RegExp('\\\\${([^}]*)}', 'g').exec(attributeName) || [];\n            var attrValueMatch = new RegExp('\\\\${([^}]*)}', 'g').exec(element.getAttribute(attributeName))\n                || [];\n            // eslint-disable-next-line\n            var attributeNameFunction;\n            // eslint-disable-next-line\n            var attributeValueFunction;\n            if (attrNameMatch.length || attrValueMatch.length) {\n                if (attrNameMatch[1]) {\n                    // tslint:disable-next-line:no-function-constructor-with-string-args\n                    attributeNameFunction = new Function('data', 'return ' + 'data.' + attrNameMatch[1]);\n                }\n                if (attrValueMatch[1]) {\n                    if (attrValueMatch[1].indexOf('?') !== -1 && attrValueMatch[1].indexOf(':') !== -1) {\n                        // tslint:disable-next-line:no-function-constructor-with-string-args\n                        attributeValueFunction = new Function('data', 'return ' + attrValueMatch[1].replace(/\\$/g, 'data.'));\n                    }\n                    else {\n                        // tslint:disable-next-line:no-function-constructor-with-string-args\n                        attributeValueFunction = new Function('data', 'return ' + 'data.' + attrValueMatch[1]);\n                    }\n                }\n                // eslint-disable-next-line @typescript-eslint/ban-types\n                var subNode_1 = {};\n                if (isHeader) {\n                    subNode_1.bindedvalue = [attrNameMatch[1] === undefined ? undefined : attributeNameFunction(this_2.headerData),\n                        attrValueMatch[1] === undefined ? undefined : attributeValueFunction(this_2.headerData)];\n                }\n                else {\n                    subNode_1.bindedvalue = [attrNameMatch[1] === undefined ? undefined : attributeNameFunction(this_2.templateData),\n                        attrValueMatch[1] === undefined ? undefined : attributeValueFunction(this_2.templateData)];\n                }\n                subNode_1.attrName = subNode_1.bindedvalue[0] === undefined ?\n                    attributeName : subNode_1.bindedvalue[0];\n                subNode_1.onChange = function (value) {\n                    var bindedvalue = subNode_1.bindedvalue[1] === undefined ?\n                        element.getAttribute(subNode_1.attrName) : attributeValueFunction(value);\n                    element.removeAttribute(subNode_1.attrName);\n                    subNode_1.attrName = subNode_1.bindedvalue[0] === undefined ? subNode_1.attrName : attributeNameFunction(value);\n                    element.setAttribute(subNode_1.attrName, bindedvalue);\n                    subNode_1.bindedvalue = [subNode_1.bindedvalue[0] === undefined ? undefined : attributeNameFunction(value),\n                        subNode_1.bindedvalue[1] === undefined ? undefined : attributeValueFunction(value)];\n                };\n                var attributeValue = subNode_1.bindedvalue[1] === undefined ? element.getAttribute(attributeName) :\n                    subNode_1.bindedvalue[1];\n                element.removeAttribute(attributeName);\n                element.setAttribute(subNode_1.attrName, attributeValue);\n                this_2.updateContextData(listElement, subNode_1, isHeader);\n            }\n        };\n        var this_2 = this;\n        for (var i = 0; i < attributeNames.length; i++) {\n            _loop_2(i);\n        }\n    };\n    Virtualization.prototype.textProperty = function (element, listElement, isHeader) {\n        var regex = new RegExp('\\\\${([^}]*)}', 'g');\n        var resultantOutput = [];\n        var regexMatch;\n        while (regexMatch !== null) {\n            var match = regex.exec(element.innerText);\n            resultantOutput.push(match);\n            regexMatch = match;\n            if (regexMatch === null) {\n                resultantOutput.pop();\n            }\n        }\n        var isChildHasTextContent = Array.prototype.some.call(element.children, function (element) {\n            if (new RegExp('\\\\${([^}]*)}', 'g').exec(element.innerText)) {\n                return true;\n            }\n            else {\n                return false;\n            }\n        });\n        if (resultantOutput && resultantOutput.length && !isChildHasTextContent) {\n            var _loop_3 = function (i) {\n                var textPropertyMatch = resultantOutput[i];\n                // eslint-disable-next-line\n                var subNode = {};\n                // eslint-disable-next-line\n                var textFunction;\n                if (textPropertyMatch[1].indexOf('?') !== -1 && textPropertyMatch[1].indexOf(':') !== -1) {\n                    // tslint:disable-next-line:no-function-constructor-with-string-args\n                    textFunction = new Function('data', 'return ' + textPropertyMatch[1].replace(/\\$/g, 'data.'));\n                }\n                else {\n                    // tslint:disable-next-line:no-function-constructor-with-string-args\n                    textFunction = new Function('data', 'return ' + 'data.' + textPropertyMatch[1]);\n                }\n                if (isHeader) {\n                    subNode.bindedvalue = textFunction(this_3.headerData);\n                }\n                else {\n                    subNode.bindedvalue = textFunction(this_3.templateData);\n                }\n                subNode.onChange = function (value) {\n                    element.innerText = element.innerText.replace(subNode.bindedvalue, textFunction(value));\n                    subNode.bindedvalue = textFunction(value);\n                };\n                element.innerText = element.innerText.replace(textPropertyMatch[0], subNode.bindedvalue);\n                this_3.updateContextData(listElement, subNode, isHeader);\n            };\n            var this_3 = this;\n            for (var i = 0; i < resultantOutput.length; i++) {\n                _loop_3(i);\n            }\n        }\n    };\n    Virtualization.prototype.reRenderUiVirtualization = function () {\n        this.wireScrollEvent(true);\n        if (this.listViewInstance.contentContainer) {\n            detach(this.listViewInstance.contentContainer);\n        }\n        this.listViewInstance.preRender();\n        // resetting the dom count to 0, to avoid edge case of dataSource suddenly becoming zero\n        // and then manually adding item using addItem API\n        this.domItemCount = 0;\n        this.listViewInstance.header();\n        this.listViewInstance.setLocalData();\n    };\n    Virtualization.prototype.updateUI = function (element, index, targetElement) {\n        // eslint-disable-next-line @typescript-eslint/ban-types\n        var onChange = this.isNgTemplate() ? this.onNgChange : this.onChange;\n        if (this.listViewInstance.template || this.listViewInstance.groupTemplate) {\n            var curViewDS = this.listViewInstance.curViewDS[index];\n            // eslint-disable-next-line\n            element.dataset.uid = (curViewDS[this.listViewInstance.fields.id]) ?\n                // eslint-disable-next-line\n                (curViewDS[this.listViewInstance.fields.id]) : ListBase.generateId();\n            onChange(curViewDS, element, this);\n        }\n        else {\n            this.updateUiContent(element, index);\n        }\n        this.changeElementAttributes(element, index);\n        if (targetElement) {\n            this.listViewInstance.ulElement.insertBefore(element, targetElement);\n        }\n    };\n    Virtualization.prototype.onNgChange = function (newData, listElement, virtualThis) {\n        // compile given target element with template for new data\n        // eslint-disable-next-line\n        var templateCompiler = compile(virtualThis.listViewInstance.template);\n        var resultElement = templateCompiler(newData);\n        while (listElement.lastChild) {\n            listElement.removeChild(listElement.lastChild);\n        }\n        listElement.appendChild(resultElement[0]);\n    };\n    Virtualization.prototype.getModuleName = function () {\n        return 'virtualization';\n    };\n    Virtualization.prototype.destroy = function () {\n        this.wireScrollEvent(true);\n    };\n    return Virtualization;\n}());\nexport { Virtualization };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}