{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nimport axios from 'axios';\nimport router from \"@/router\";\n// import createPersistedState from \"vuex-persistedstate\";\n\nVue.use(Vuex);\nconst REST_API = `http://localhost:9999`;\nexport default new Vuex.Store({\n  // plugins: [createPersistedState()],\n  state: {\n    loginUser: null\n  },\n  getters: {},\n  mutations: {\n    LOGIN_USER(state, user) {\n      state.loginUser = user;\n    }\n  },\n  actions: {\n    loginUser({\n      commit\n    }, user) {\n      console.log(user);\n      const API_URL = `${REST_API}/userApi/login`;\n      axios({\n        url: API_URL,\n        method: \"POST\",\n        data: user\n      }).then(res => {\n        if (res.data.message === \"success\") {\n          commit(\"LOGIN_USER\", user);\n          sessionStorage.setItem(\"access-token\", res.data[\"access-token\"]);\n          router.push({\n            name: \"home\"\n          });\n        } else {\n          alert(\"로그인에 실패하였습니다.\");\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  },\n  modules: {}\n});","map":{"version":3,"names":["Vue","Vuex","axios","router","use","REST_API","Store","state","loginUser","getters","mutations","LOGIN_USER","user","actions","commit","console","log","API_URL","url","method","data","then","res","message","sessionStorage","setItem","push","name","alert","catch","err","modules"],"sources":["/Users/gimgyuyeon/Desktop/Fit-IT-/FrontEnd/fit-it/src/store/index.js"],"sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\nimport axios from 'axios';\nimport router from \"@/router\";\n// import createPersistedState from \"vuex-persistedstate\";\n\nVue.use(Vuex)\n\nconst REST_API = `http://localhost:9999`;\n\nexport default new Vuex.Store({\n  // plugins: [createPersistedState()],\n  state: {\n    loginUser: null\n  },\n  getters: {\n  },\n  mutations: {\n    LOGIN_USER(state, user) {\n      state.loginUser = user;\n    },\n  },\n  actions: {\n    loginUser({ commit }, user) {\n      console.log(user);\n      const API_URL = `${REST_API}/userApi/login`;\n      axios({\n        url: API_URL,\n        method: \"POST\",\n        data: user,\n      })\n        .then((res) => {\n        if (res.data.message === \"success\") {\n            commit(\"LOGIN_USER\", user);\n            sessionStorage.setItem(\"access-token\", res.data[\"access-token\"]);\n            router.push({ name: \"home\" });\n          } else {\n            alert(\"로그인에 실패하였습니다.\");\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  },\n  modules: {\n  }\n})\n"],"mappings":";AAAA,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAOC,IAAI,MAAM,MAAM;AACvB,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,UAAU;AAC7B;;AAEAH,GAAG,CAACI,GAAG,CAACH,IAAI,CAAC;AAEb,MAAMI,QAAQ,GAAI,uBAAsB;AAExC,eAAe,IAAIJ,IAAI,CAACK,KAAK,CAAC;EAC5B;EACAC,KAAK,EAAE;IACLC,SAAS,EAAE;EACb,CAAC;EACDC,OAAO,EAAE,CACT,CAAC;EACDC,SAAS,EAAE;IACTC,UAAU,CAACJ,KAAK,EAAEK,IAAI,EAAE;MACtBL,KAAK,CAACC,SAAS,GAAGI,IAAI;IACxB;EACF,CAAC;EACDC,OAAO,EAAE;IACPL,SAAS,CAAC;MAAEM;IAAO,CAAC,EAAEF,IAAI,EAAE;MAC1BG,OAAO,CAACC,GAAG,CAACJ,IAAI,CAAC;MACjB,MAAMK,OAAO,GAAI,GAAEZ,QAAS,gBAAe;MAC3CH,KAAK,CAAC;QACJgB,GAAG,EAAED,OAAO;QACZE,MAAM,EAAE,MAAM;QACdC,IAAI,EAAER;MACR,CAAC,CAAC,CACCS,IAAI,CAAEC,GAAG,IAAK;QACf,IAAIA,GAAG,CAACF,IAAI,CAACG,OAAO,KAAK,SAAS,EAAE;UAChCT,MAAM,CAAC,YAAY,EAAEF,IAAI,CAAC;UAC1BY,cAAc,CAACC,OAAO,CAAC,cAAc,EAAEH,GAAG,CAACF,IAAI,CAAC,cAAc,CAAC,CAAC;UAChEjB,MAAM,CAACuB,IAAI,CAAC;YAAEC,IAAI,EAAE;UAAO,CAAC,CAAC;QAC/B,CAAC,MAAM;UACLC,KAAK,CAAC,eAAe,CAAC;QACxB;MACF,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAK;QACdf,OAAO,CAACC,GAAG,CAACc,GAAG,CAAC;MAClB,CAAC,CAAC;IACN;EACF,CAAC;EACDC,OAAO,EAAE,CACT;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}