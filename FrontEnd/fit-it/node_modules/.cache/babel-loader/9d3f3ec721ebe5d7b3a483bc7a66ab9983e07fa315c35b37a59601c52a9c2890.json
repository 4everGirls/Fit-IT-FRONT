{"ast":null,"code":"import \"vue-datepicker-ui/lib/vuedatepickerui.css\";\nimport VueDatepickerUi from \"vue-datepicker-ui\";\nimport moment from \"moment\";\nimport { mapState } from \"vuex\";\nexport default {\n  name: \"RegistChallengeForm\",\n  components: {\n    Datepicker: VueDatepickerUi\n  },\n  data() {\n    return {\n      selectedDate: [new Date(), new Date(new Date().getTime() + 9 * 24 * 60 * 60 * 1000)],\n      challengeName: \"\",\n      challengeContent: \"\"\n    };\n  },\n  computed: {\n    ...mapState([\"missions\", \"loginUser\"])\n  },\n  methods: {\n    makeChallenge() {\n      if (this.challengeName === \"\" || this.challengeContent === \"\") {\n        alert(\"모든 내용을 입력해주세요.\");\n        return;\n      }\n      let startDate = moment(this.selectedDate[0]).format(\"YYMMDD\");\n      let endDate = moment(this.selectedDate[1]).format(\"YYMMDD\");\n\n      //this.$store.dispatch(\"makeChallenge\", {\n      //  challengeName: this.challengeName,\n      //  challengeContent: this.challengeContent,\n      //  startDate,\n      // endDate,\n      //  missions: this.missions,\n      //  userNo: this.loginUser.userNo,\n      //\n      //});\n\n      this.$store.dispatch(\"makeChallengePromise\", {\n        challengeName: this.challengeName,\n        challengeContent: this.challengeContent,\n        startDate,\n        endDate,\n        userNo: this.loginUser.userNo\n      }).then(data => {\n        return this.$store.dispatch(\"makeMissionPromise\", {\n          challengeNo: data,\n          missions: this.missions\n        });\n      }).then(() => {\n        console.log(\"등록이 완료되었습니다.\");\n      });\n    }\n  }\n};","map":{"version":3,"mappings":"AAqCA;AACA;AACA;AACA;AAEA;EACAA;EACAC;IACAC;EACA;EACAC;IACA;MACAC,eACA,YACA,yDACA;MAEAC;MACAC;IACA;EACA;EACAC;IACA;EACA;EACAC;IACAC;MACA;QACAC;QACA;MACA;MACA;MACA;;MAEA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;;MAEA,YACAC;QACAN;QACAC;QACAM;QACAC;QACAC;MACA,GACAC;QACA;UACAC;UACAC;QACA;MACA,GACAF;QACAG;MACA;IACA;EACA;AACA","names":["name","components","Datepicker","data","selectedDate","challengeName","challengeContent","computed","methods","makeChallenge","alert","dispatch","startDate","endDate","userNo","then","challengeNo","missions","console"],"sourceRoot":"src/components/challenge/MakeChallenge","sources":["RegistChallengeForm.vue"],"sourcesContent":["<template>\r\n  <div class=\"result-container pa-3\">\r\n    <div class=\"row \" id=\"box\">\r\n      <form>\r\n        <div class=\"row m-3\">\r\n          <input\r\n            class=\"form-control\"\r\n            type=\"text\"\r\n            placeholder=\"챌린지 이름을 입력하세요.\"\r\n            v-model=\"challengeName\"\r\n          />\r\n        </div>\r\n        <div class=\"row calneder\">\r\n          <Datepicker range v-model=\"selectedDate\" lang=\"en\" />\r\n        </div>\r\n\r\n        <div class=\"row m-3\">\r\n          <label class=\"form-label\" for=\"challengeContent\"\r\n            >어떤 챌린지인가요?</label\r\n          >\r\n          <textarea\r\n            class=\"form-control\"\r\n            id=\"challengeContent\"\r\n            rows=\"15\"\r\n            v-model=\"challengeContent\"\r\n            placeholder=\"챌린지 설명을 적어주세요.\"\r\n          ></textarea>\r\n        </div>\r\n      </form>\r\n      <div class=\"row me-5\">\r\n        <button class=\"btn btn-primary\" @click=\"makeChallenge\">만들기</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport \"vue-datepicker-ui/lib/vuedatepickerui.css\";\r\nimport VueDatepickerUi from \"vue-datepicker-ui\";\r\nimport moment from \"moment\";\r\nimport { mapState } from \"vuex\";\r\n\r\nexport default {\r\n  name: \"RegistChallengeForm\",\r\n  components: {\r\n    Datepicker: VueDatepickerUi,\r\n  },\r\n  data() {\r\n    return {\r\n      selectedDate: [\r\n        new Date(),\r\n        new Date(new Date().getTime() + 9 * 24 * 60 * 60 * 1000),\r\n      ],\r\n\r\n      challengeName: \"\",\r\n      challengeContent: \"\",\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapState([\"missions\", \"loginUser\"]),\r\n  },\r\n  methods: {\r\n    makeChallenge() {\r\n      if (this.challengeName === \"\" || this.challengeContent === \"\") {\r\n        alert(\"모든 내용을 입력해주세요.\");\r\n        return;\r\n      }\r\n      let startDate = moment(this.selectedDate[0]).format(\"YYMMDD\");\r\n      let endDate = moment(this.selectedDate[1]).format(\"YYMMDD\");\r\n\r\n      //this.$store.dispatch(\"makeChallenge\", {\r\n      //  challengeName: this.challengeName,\r\n      //  challengeContent: this.challengeContent,\r\n      //  startDate,\r\n      // endDate,\r\n      //  missions: this.missions,\r\n      //  userNo: this.loginUser.userNo,\r\n      //\r\n      //});\r\n\r\n      this.$store\r\n        .dispatch(\"makeChallengePromise\", {\r\n          challengeName: this.challengeName,\r\n          challengeContent: this.challengeContent,\r\n          startDate,\r\n          endDate,\r\n          userNo: this.loginUser.userNo,\r\n        })\r\n        .then((data) => {\r\n          return this.$store.dispatch(\"makeMissionPromise\", {\r\n            challengeNo: data,\r\n            missions: this.missions,\r\n          });\r\n        })\r\n        .then(() => {\r\n          console.log(\"등록이 완료되었습니다.\");\r\n        });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.result-container {\r\n  background-color: white;\r\n  border-radius: 13px;\r\n  height: 80%;\r\n  \r\n}\r\n.calneder {\r\n  margin: 6px;\r\n}\r\n#box {\r\n  padding: 10px;\r\n  margin: auto;\r\n  display: block;\r\n  width: 75%;\r\n}\r\n.btn {\r\n  margin: 0 auto;\r\n  width: 100px;\r\n}\r\nform {\r\n  padding: 10px 0 10px 0;\r\n}\r\n.form-label {\r\n  font-size: 20px;\r\n  margin: 10px 0 15px 0;\r\n  padding:0;\r\n  font-weight: 800;\r\n  color:rgb(47, 42, 83);\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}