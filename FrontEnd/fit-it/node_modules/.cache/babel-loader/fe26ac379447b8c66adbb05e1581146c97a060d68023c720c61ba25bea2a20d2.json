{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Event, Property, NotifyPropertyChanges } from '@syncfusion/ej2-base';\nimport { isNullOrUndefined, formatUnit, getValue, setValue, addClass, detach } from '@syncfusion/ej2-base';\nimport { removeClass, Browser, closest } from '@syncfusion/ej2-base';\nimport { Input } from '../../input/input';\nimport { regularExpressions, createMask, applyMask, wireEvents, unwireEvents, unstrippedValue, strippedValue } from '../base/index';\nimport { setMaskValue, setElementValue, bindClearEvent } from '../base/index';\nvar ROOT = 'e-control-wrapper e-mask';\nvar INPUT = 'e-input';\nvar COMPONENT = 'e-maskedtextbox';\nvar CONTROL = 'e-control';\nvar MASKINPUT_FOCUS = 'e-input-focus';\nvar wrapperAttr = ['title', 'style', 'class'];\n/**\n * The MaskedTextBox allows the user to enter the valid input only based on the provided mask.\n * ```html\n * <input id=\"mask\" type=\"text\" />\n * ```\n * ```typescript\n * <script>\n * var maskObj = new MaskedTextBox({ mask: \"(999) 9999-999\" });\n * maskObj.appendTo('#mask');\n * </script>\n * ```\n */\nvar MaskedTextBox = /** @class */function (_super) {\n  __extends(MaskedTextBox, _super);\n  /**\n   *\n   * @param {MaskedTextBoxModel} options - Specifies the MaskedTextBox model.\n   * @param {string | HTMLElement | HTMLInputElement} element - Specifies the element to render as component.\n   * @private\n   */\n  function MaskedTextBox(options, element) {\n    var _this = _super.call(this, options, element) || this;\n    _this.initInputValue = '';\n    _this.isAngular = false;\n    _this.preventChange = false;\n    _this.isClicked = false;\n    _this.maskOptions = options;\n    return _this;\n  }\n  /**\n   * Gets the component name.\n   *\n   * @returns {string} Returns the component name.\n   * @private\n   */\n  MaskedTextBox.prototype.getModuleName = function () {\n    return 'maskedtextbox';\n  };\n  /**\n   * Initializes the event handler\n   *\n   * @returns {void}\n   * @private\n   */\n  MaskedTextBox.prototype.preRender = function () {\n    this.promptMask = '';\n    this.hiddenMask = '';\n    this.escapeMaskValue = '';\n    this.regExpCollec = regularExpressions;\n    this.customRegExpCollec = [];\n    this.undoCollec = [];\n    this.redoCollec = [];\n    this.changeEventArgs = {};\n    this.focusEventArgs = {};\n    this.blurEventArgs = {};\n    this.maskKeyPress = false;\n    this.isFocus = false;\n    this.isInitial = false;\n    this.isIosInvalid = false;\n    var ejInstance = getValue('ej2_instances', this.element);\n    this.cloneElement = this.element.cloneNode(true);\n    removeClass([this.cloneElement], [CONTROL, COMPONENT, 'e-lib']);\n    this.angularTagName = null;\n    this.formElement = closest(this.element, 'form');\n    if (this.element.tagName === 'EJS-MASKEDTEXTBOX') {\n      this.angularTagName = this.element.tagName;\n      var input = this.createElement('input');\n      for (var i = 0; i < this.element.attributes.length; i++) {\n        input.setAttribute(this.element.attributes[i].nodeName, this.element.attributes[i].nodeValue);\n        input.innerHTML = this.element.innerHTML;\n      }\n      if (this.element.hasAttribute('id')) {\n        this.element.removeAttribute('id');\n      }\n      this.element.classList.remove('e-control', 'e-maskedtextbox');\n      this.element.classList.add('e-mask-container');\n      this.element.appendChild(input);\n      this.element = input;\n      setValue('ej2_instances', ejInstance, this.element);\n    }\n    this.updateHTMLAttrToElement();\n    this.checkHtmlAttributes(false);\n    if (this.formElement) {\n      this.initInputValue = this.value;\n    }\n  };\n  /* eslint-disable valid-jsdoc, jsdoc/require-returns-description */\n  /**\n   * Gets the properties to be maintained in the persisted state.\n   *\n   * @returns {string}\n   */\n  MaskedTextBox.prototype.getPersistData = function () {\n    var keyEntity = ['value'];\n    return this.addOnPersist(keyEntity);\n  };\n  /* eslint-enable valid-jsdoc, jsdoc/require-returns-description */\n  /**\n   * Initializes the component rendering.\n   *\n   * @returns {void}\n   * @private\n   */\n  MaskedTextBox.prototype.render = function () {\n    if (this.element.tagName.toLowerCase() === 'input') {\n      if (this.floatLabelType === 'Never') {\n        addClass([this.element], INPUT);\n      }\n      this.createWrapper();\n      this.updateHTMLAttrToWrapper();\n      if (this.element.name === '') {\n        this.element.setAttribute('name', this.element.id);\n      }\n      this.isInitial = true;\n      this.resetMaskedTextBox();\n      this.isInitial = false;\n      this.setMaskPlaceholder(true, false);\n      this.setWidth(this.width);\n      this.preEleVal = this.element.value;\n      if (!Browser.isDevice && (Browser.info.version === '11.0' || Browser.info.name === 'edge')) {\n        this.element.blur();\n      }\n      if (Browser.isDevice && Browser.isIos) {\n        this.element.blur();\n      }\n      if (this.element.getAttribute('value') || this.value) {\n        this.element.setAttribute('value', this.element.value);\n      }\n      if (!isNullOrUndefined(closest(this.element, \"fieldset\")) && closest(this.element, \"fieldset\").disabled) {\n        this.enabled = false;\n      }\n      this.renderComplete();\n    }\n  };\n  MaskedTextBox.prototype.updateHTMLAttrToElement = function () {\n    if (!isNullOrUndefined(this.htmlAttributes)) {\n      for (var _i = 0, _a = Object.keys(this.htmlAttributes); _i < _a.length; _i++) {\n        var key = _a[_i];\n        if (wrapperAttr.indexOf(key) < 0) {\n          this.element.setAttribute(key, this.htmlAttributes[key]);\n        }\n      }\n    }\n  };\n  MaskedTextBox.prototype.updateCssClass = function (newClass, oldClass) {\n    Input.setCssClass(this.getValidClassList(newClass), [this.inputObj.container], this.getValidClassList(oldClass));\n  };\n  MaskedTextBox.prototype.getValidClassList = function (maskClassName) {\n    var result = maskClassName;\n    if (!isNullOrUndefined(maskClassName) && maskClassName !== '') {\n      result = maskClassName.replace(/\\s+/g, ' ').trim();\n    }\n    return result;\n  };\n  MaskedTextBox.prototype.updateHTMLAttrToWrapper = function () {\n    if (!isNullOrUndefined(this.htmlAttributes)) {\n      for (var _i = 0, _a = Object.keys(this.htmlAttributes); _i < _a.length; _i++) {\n        var key = _a[_i];\n        if (wrapperAttr.indexOf(key) > -1) {\n          if (key === 'class') {\n            var updatedClassValues = this.htmlAttributes[key].replace(/\\s+/g, ' ').trim();\n            if (updatedClassValues !== '') {\n              addClass([this.inputObj.container], updatedClassValues.split(' '));\n            }\n          } else if (key === 'style') {\n            var maskStyle = this.inputObj.container.getAttribute(key);\n            maskStyle = !isNullOrUndefined(maskStyle) ? maskStyle + this.htmlAttributes[key] : this.htmlAttributes[key];\n            this.inputObj.container.setAttribute(key, maskStyle);\n          } else {\n            this.inputObj.container.setAttribute(key, this.htmlAttributes[key]);\n          }\n        }\n      }\n    }\n  };\n  MaskedTextBox.prototype.resetMaskedTextBox = function () {\n    this.promptMask = '';\n    this.hiddenMask = '';\n    this.escapeMaskValue = '';\n    this.customRegExpCollec = [];\n    this.undoCollec = [];\n    this.redoCollec = [];\n    if (this.promptChar.length > 1) {\n      this.promptChar = this.promptChar[0];\n    }\n    createMask.call(this);\n    applyMask.call(this);\n    if (this.mask === null || this.mask === '' && this.value !== undefined) {\n      setElementValue.call(this, this.value);\n    }\n    var val = strippedValue.call(this, this.element);\n    this.prevValue = val;\n    this.value = val;\n    if (!this.isInitial) {\n      unwireEvents.call(this);\n    }\n    wireEvents.call(this);\n  };\n  MaskedTextBox.prototype.setMaskPlaceholder = function (setVal, dynamicPlaceholder) {\n    if (dynamicPlaceholder || this.placeholder) {\n      Input.setPlaceholder(this.placeholder, this.element);\n      if (this.element.value === this.promptMask && setVal && this.floatLabelType !== 'Always' || this.element.value === this.promptMask && this.floatLabelType === 'Never') {\n        setElementValue.call(this, '');\n      }\n    }\n  };\n  MaskedTextBox.prototype.setWidth = function (width) {\n    if (!isNullOrUndefined(width)) {\n      if (typeof width === 'number') {\n        this.inputObj.container.style.width = formatUnit(width);\n        this.element.style.width = formatUnit(width);\n      } else if (typeof width === 'string') {\n        var elementWidth = width.match(/px|%|em/) ? width : formatUnit(width);\n        this.inputObj.container.style.width = elementWidth;\n        this.element.style.width = elementWidth;\n      }\n    }\n  };\n  MaskedTextBox.prototype.checkHtmlAttributes = function (isDynamic) {\n    var attributes = isDynamic ? isNullOrUndefined(this.htmlAttributes) ? [] : Object.keys(this.htmlAttributes) : ['placeholder', 'disabled', 'value', 'readonly'];\n    for (var _i = 0, attributes_1 = attributes; _i < attributes_1.length; _i++) {\n      var key = attributes_1[_i];\n      if (!isNullOrUndefined(this.element.getAttribute(key))) {\n        switch (key) {\n          case 'placeholder':\n            if (isNullOrUndefined(this.maskOptions) || this.maskOptions['placeholder'] === undefined || isDynamic) {\n              this.setProperties({\n                placeholder: this.element.placeholder\n              }, !isDynamic);\n            }\n            break;\n          case 'disabled':\n            if (isNullOrUndefined(this.maskOptions) || this.maskOptions['enabled'] === undefined || isDynamic) {\n              var isEnabled = this.element.getAttribute(key) === 'disabled' || this.element.getAttribute(key) === '' || this.element.getAttribute(key) === 'true' ? false : true;\n              this.setProperties({\n                enabled: isEnabled\n              }, !isDynamic);\n            }\n            break;\n          case 'value':\n            if (isNullOrUndefined(this.maskOptions) || this.maskOptions['value'] === undefined || isDynamic) {\n              this.setProperties({\n                value: this.element.value\n              }, !isDynamic);\n            }\n            break;\n          case 'readonly':\n            if (isNullOrUndefined(this.maskOptions) || this.maskOptions['readonly'] === undefined || isDynamic) {\n              var isReadonly = this.element.getAttribute(key) === 'readonly' || this.element.getAttribute(key) === '' || this.element.getAttribute(key) === 'true' ? true : false;\n              this.setProperties({\n                readonly: isReadonly\n              }, !isDynamic);\n            }\n            break;\n        }\n      }\n    }\n  };\n  MaskedTextBox.prototype.createWrapper = function () {\n    var updatedCssClassValues = this.cssClass;\n    if (!isNullOrUndefined(this.cssClass) && this.cssClass !== '') {\n      updatedCssClassValues = this.getValidClassList(this.cssClass);\n    }\n    this.inputObj = Input.createInput({\n      element: this.element,\n      floatLabelType: this.floatLabelType,\n      properties: {\n        enableRtl: this.enableRtl,\n        cssClass: updatedCssClassValues,\n        enabled: this.enabled,\n        readonly: this.readonly,\n        placeholder: this.placeholder,\n        showClearButton: this.showClearButton\n      }\n    }, this.createElement);\n    this.inputObj.container.setAttribute('class', ROOT + ' ' + this.inputObj.container.getAttribute('class'));\n  };\n  /**\n   * Calls internally if any of the property value is changed.\n   *\n   * @param {MaskedTextBoxModel} newProp - Returns the dynamic property value of the component.\n   * @param {MaskedTextBoxModel} oldProp - Returns the previous property value of the component.\n   * @returns {void}\n   * @hidden\n   */\n  MaskedTextBox.prototype.onPropertyChanged = function (newProp, oldProp) {\n    for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n      var prop = _a[_i];\n      switch (prop) {\n        case 'value':\n          setMaskValue.call(this, this.value);\n          if (this.placeholder) {\n            this.setMaskPlaceholder(false, false);\n          }\n          break;\n        case 'placeholder':\n          this.setMaskPlaceholder(true, true);\n          break;\n        case 'width':\n          this.setWidth(newProp.width);\n          Input.calculateWidth(this.element, this.inputObj.container);\n          break;\n        case 'cssClass':\n          this.updateCssClass(newProp.cssClass, oldProp.cssClass);\n          break;\n        case 'enabled':\n          Input.setEnabled(newProp.enabled, this.element, this.floatLabelType, this.inputObj.container);\n          break;\n        case 'readonly':\n          Input.setReadonly(newProp.readonly, this.element);\n          break;\n        case 'enableRtl':\n          Input.setEnableRtl(newProp.enableRtl, [this.inputObj.container]);\n          break;\n        case 'customCharacters':\n          this.customCharacters = newProp.customCharacters;\n          this.resetMaskedTextBox();\n          break;\n        case 'showClearButton':\n          Input.setClearButton(newProp.showClearButton, this.element, this.inputObj, undefined, this.createElement);\n          bindClearEvent.call(this);\n          break;\n        case 'floatLabelType':\n          this.floatLabelType = newProp.floatLabelType;\n          Input.removeFloating(this.inputObj);\n          Input.addFloating(this.element, this.floatLabelType, this.placeholder, this.createElement);\n          break;\n        case 'htmlAttributes':\n          this.updateHTMLAttrToElement();\n          this.updateHTMLAttrToWrapper();\n          this.checkHtmlAttributes(true);\n          break;\n        case 'mask':\n          {\n            var strippedValue_1 = this.value;\n            this.mask = newProp.mask;\n            this.updateValue(strippedValue_1);\n          }\n          break;\n        case 'promptChar':\n          {\n            if (newProp.promptChar.length > 1) {\n              newProp.promptChar = newProp.promptChar[0];\n            }\n            if (newProp.promptChar) {\n              this.promptChar = newProp.promptChar;\n            } else {\n              this.promptChar = '_';\n            }\n            var value = this.element.value.replace(new RegExp('[' + oldProp.promptChar + ']', 'g'), this.promptChar);\n            if (this.promptMask === this.element.value) {\n              value = this.promptMask.replace(new RegExp('[' + oldProp.promptChar + ']', 'g'), this.promptChar);\n            }\n            this.promptMask = this.promptMask.replace(new RegExp('[' + oldProp.promptChar + ']', 'g'), this.promptChar);\n            this.undoCollec = this.redoCollec = [];\n            setElementValue.call(this, value);\n            break;\n          }\n      }\n    }\n    this.preventChange = this.isAngular && this.preventChange ? !this.preventChange : this.preventChange;\n  };\n  MaskedTextBox.prototype.updateValue = function (strippedVal) {\n    this.resetMaskedTextBox();\n    setMaskValue.call(this, strippedVal);\n  };\n  /* eslint-disable valid-jsdoc, jsdoc/require-returns-description */\n  /**\n   * Gets the value of the MaskedTextBox with the masked format.\n   * By using `value` property, you can get the raw value of maskedtextbox without literals and prompt characters.\n   *\n   * @returns {string}\n   */\n  MaskedTextBox.prototype.getMaskedValue = function () {\n    return unstrippedValue.call(this, this.element);\n  };\n  /* eslint-enable valid-jsdoc, jsdoc/require-returns-description */\n  /**\n   * Sets the focus to widget for interaction.\n   *\n   * @returns {void}\n   */\n  MaskedTextBox.prototype.focusIn = function () {\n    if (document.activeElement !== this.element && this.enabled) {\n      this.element.focus();\n      addClass([this.inputObj.container], [MASKINPUT_FOCUS]);\n    }\n  };\n  /**\n   * Remove the focus from widget, if the widget is in focus state.\n   *\n   * @returns {void}\n   */\n  MaskedTextBox.prototype.focusOut = function () {\n    if (document.activeElement === this.element && this.enabled) {\n      this.element.blur();\n      removeClass([this.inputObj.container], [MASKINPUT_FOCUS]);\n    }\n  };\n  /**\n   * Removes the component from the DOM and detaches all its related event handlers.\n   * Also it maintains the initial input element from the DOM.\n   *\n   * @method destroy\n   * @returns {void}\n   */\n  MaskedTextBox.prototype.destroy = function () {\n    unwireEvents.call(this);\n    var attrArray = ['aria-labelledby', 'role', 'autocomplete', 'aria-readonly', 'aria-disabled', 'autocapitalize', 'spellcheck', 'aria-autocomplete', 'aria-live', 'aria-invalid'];\n    for (var i = 0; i < attrArray.length; i++) {\n      this.element.removeAttribute(attrArray[i]);\n    }\n    this.element.classList.remove('e-input');\n    this.inputObj.container.insertAdjacentElement('afterend', this.element);\n    detach(this.inputObj.container);\n    _super.prototype.destroy.call(this);\n  };\n  __decorate([Property(null)], MaskedTextBox.prototype, \"cssClass\", void 0);\n  __decorate([Property(null)], MaskedTextBox.prototype, \"width\", void 0);\n  __decorate([Property(null)], MaskedTextBox.prototype, \"placeholder\", void 0);\n  __decorate([Property('Never')], MaskedTextBox.prototype, \"floatLabelType\", void 0);\n  __decorate([Property({})], MaskedTextBox.prototype, \"htmlAttributes\", void 0);\n  __decorate([Property(true)], MaskedTextBox.prototype, \"enabled\", void 0);\n  __decorate([Property(false)], MaskedTextBox.prototype, \"readonly\", void 0);\n  __decorate([Property(false)], MaskedTextBox.prototype, \"showClearButton\", void 0);\n  __decorate([Property(false)], MaskedTextBox.prototype, \"enablePersistence\", void 0);\n  __decorate([Property(null)], MaskedTextBox.prototype, \"mask\", void 0);\n  __decorate([Property('_')], MaskedTextBox.prototype, \"promptChar\", void 0);\n  __decorate([Property(null)], MaskedTextBox.prototype, \"value\", void 0);\n  __decorate([Property(null)], MaskedTextBox.prototype, \"customCharacters\", void 0);\n  __decorate([Event()], MaskedTextBox.prototype, \"created\", void 0);\n  __decorate([Event()], MaskedTextBox.prototype, \"destroyed\", void 0);\n  __decorate([Event()], MaskedTextBox.prototype, \"change\", void 0);\n  __decorate([Event()], MaskedTextBox.prototype, \"focus\", void 0);\n  __decorate([Event()], MaskedTextBox.prototype, \"blur\", void 0);\n  MaskedTextBox = __decorate([NotifyPropertyChanges], MaskedTextBox);\n  return MaskedTextBox;\n}(Component);\nexport { MaskedTextBox };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","Component","Event","Property","NotifyPropertyChanges","isNullOrUndefined","formatUnit","getValue","setValue","addClass","detach","removeClass","Browser","closest","Input","regularExpressions","createMask","applyMask","wireEvents","unwireEvents","unstrippedValue","strippedValue","setMaskValue","setElementValue","bindClearEvent","ROOT","INPUT","COMPONENT","CONTROL","MASKINPUT_FOCUS","wrapperAttr","MaskedTextBox","_super","options","element","_this","call","initInputValue","isAngular","preventChange","isClicked","maskOptions","getModuleName","preRender","promptMask","hiddenMask","escapeMaskValue","regExpCollec","customRegExpCollec","undoCollec","redoCollec","changeEventArgs","focusEventArgs","blurEventArgs","maskKeyPress","isFocus","isInitial","isIosInvalid","ejInstance","cloneElement","cloneNode","angularTagName","formElement","tagName","input","createElement","attributes","setAttribute","nodeName","nodeValue","innerHTML","hasAttribute","removeAttribute","classList","remove","add","appendChild","updateHTMLAttrToElement","checkHtmlAttributes","value","getPersistData","keyEntity","addOnPersist","render","toLowerCase","floatLabelType","createWrapper","updateHTMLAttrToWrapper","name","id","resetMaskedTextBox","setMaskPlaceholder","setWidth","width","preEleVal","isDevice","info","version","blur","isIos","getAttribute","disabled","enabled","renderComplete","htmlAttributes","_i","_a","keys","indexOf","updateCssClass","newClass","oldClass","setCssClass","getValidClassList","inputObj","container","maskClassName","result","replace","trim","updatedClassValues","split","maskStyle","promptChar","mask","undefined","val","prevValue","setVal","dynamicPlaceholder","placeholder","setPlaceholder","style","elementWidth","match","isDynamic","attributes_1","setProperties","isEnabled","isReadonly","readonly","updatedCssClassValues","cssClass","createInput","properties","enableRtl","showClearButton","onPropertyChanged","newProp","oldProp","prop","calculateWidth","setEnabled","setReadonly","setEnableRtl","customCharacters","setClearButton","removeFloating","addFloating","strippedValue_1","updateValue","RegExp","strippedVal","getMaskedValue","focusIn","document","activeElement","focus","focusOut","destroy","attrArray","insertAdjacentElement"],"sources":["C:/Users/multicampus/Desktop/Fit-IT-/FrontEnd/fit-it/node_modules/@syncfusion/ej2-inputs/src/maskedtextbox/maskedtextbox/maskedtextbox.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Event, Property, NotifyPropertyChanges } from '@syncfusion/ej2-base';\nimport { isNullOrUndefined, formatUnit, getValue, setValue, addClass, detach } from '@syncfusion/ej2-base';\nimport { removeClass, Browser, closest } from '@syncfusion/ej2-base';\nimport { Input } from '../../input/input';\nimport { regularExpressions, createMask, applyMask, wireEvents, unwireEvents, unstrippedValue, strippedValue } from '../base/index';\nimport { setMaskValue, setElementValue, bindClearEvent } from '../base/index';\nvar ROOT = 'e-control-wrapper e-mask';\nvar INPUT = 'e-input';\nvar COMPONENT = 'e-maskedtextbox';\nvar CONTROL = 'e-control';\nvar MASKINPUT_FOCUS = 'e-input-focus';\nvar wrapperAttr = ['title', 'style', 'class'];\n/**\n * The MaskedTextBox allows the user to enter the valid input only based on the provided mask.\n * ```html\n * <input id=\"mask\" type=\"text\" />\n * ```\n * ```typescript\n * <script>\n * var maskObj = new MaskedTextBox({ mask: \"(999) 9999-999\" });\n * maskObj.appendTo('#mask');\n * </script>\n * ```\n */\nvar MaskedTextBox = /** @class */ (function (_super) {\n    __extends(MaskedTextBox, _super);\n    /**\n     *\n     * @param {MaskedTextBoxModel} options - Specifies the MaskedTextBox model.\n     * @param {string | HTMLElement | HTMLInputElement} element - Specifies the element to render as component.\n     * @private\n     */\n    function MaskedTextBox(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.initInputValue = '';\n        _this.isAngular = false;\n        _this.preventChange = false;\n        _this.isClicked = false;\n        _this.maskOptions = options;\n        return _this;\n    }\n    /**\n     * Gets the component name.\n     *\n     * @returns {string} Returns the component name.\n     * @private\n     */\n    MaskedTextBox.prototype.getModuleName = function () {\n        return 'maskedtextbox';\n    };\n    /**\n     * Initializes the event handler\n     *\n     * @returns {void}\n     * @private\n     */\n    MaskedTextBox.prototype.preRender = function () {\n        this.promptMask = '';\n        this.hiddenMask = '';\n        this.escapeMaskValue = '';\n        this.regExpCollec = regularExpressions;\n        this.customRegExpCollec = [];\n        this.undoCollec = [];\n        this.redoCollec = [];\n        this.changeEventArgs = {};\n        this.focusEventArgs = {};\n        this.blurEventArgs = {};\n        this.maskKeyPress = false;\n        this.isFocus = false;\n        this.isInitial = false;\n        this.isIosInvalid = false;\n        var ejInstance = getValue('ej2_instances', this.element);\n        this.cloneElement = this.element.cloneNode(true);\n        removeClass([this.cloneElement], [CONTROL, COMPONENT, 'e-lib']);\n        this.angularTagName = null;\n        this.formElement = closest(this.element, 'form');\n        if (this.element.tagName === 'EJS-MASKEDTEXTBOX') {\n            this.angularTagName = this.element.tagName;\n            var input = this.createElement('input');\n            for (var i = 0; i < this.element.attributes.length; i++) {\n                input.setAttribute(this.element.attributes[i].nodeName, this.element.attributes[i].nodeValue);\n                input.innerHTML = this.element.innerHTML;\n            }\n            if (this.element.hasAttribute('id')) {\n                this.element.removeAttribute('id');\n            }\n            this.element.classList.remove('e-control', 'e-maskedtextbox');\n            this.element.classList.add('e-mask-container');\n            this.element.appendChild(input);\n            this.element = input;\n            setValue('ej2_instances', ejInstance, this.element);\n        }\n        this.updateHTMLAttrToElement();\n        this.checkHtmlAttributes(false);\n        if (this.formElement) {\n            this.initInputValue = this.value;\n        }\n    };\n    /* eslint-disable valid-jsdoc, jsdoc/require-returns-description */\n    /**\n     * Gets the properties to be maintained in the persisted state.\n     *\n     * @returns {string}\n     */\n    MaskedTextBox.prototype.getPersistData = function () {\n        var keyEntity = ['value'];\n        return this.addOnPersist(keyEntity);\n    };\n    /* eslint-enable valid-jsdoc, jsdoc/require-returns-description */\n    /**\n     * Initializes the component rendering.\n     *\n     * @returns {void}\n     * @private\n     */\n    MaskedTextBox.prototype.render = function () {\n        if (this.element.tagName.toLowerCase() === 'input') {\n            if (this.floatLabelType === 'Never') {\n                addClass([this.element], INPUT);\n            }\n            this.createWrapper();\n            this.updateHTMLAttrToWrapper();\n            if (this.element.name === '') {\n                this.element.setAttribute('name', this.element.id);\n            }\n            this.isInitial = true;\n            this.resetMaskedTextBox();\n            this.isInitial = false;\n            this.setMaskPlaceholder(true, false);\n            this.setWidth(this.width);\n            this.preEleVal = this.element.value;\n            if (!Browser.isDevice && (Browser.info.version === '11.0' || Browser.info.name === 'edge')) {\n                this.element.blur();\n            }\n            if (Browser.isDevice && Browser.isIos) {\n                this.element.blur();\n            }\n            if (this.element.getAttribute('value') || this.value) {\n                this.element.setAttribute('value', this.element.value);\n            }\n            if (!isNullOrUndefined(closest(this.element, \"fieldset\")) && closest(this.element, \"fieldset\").disabled) {\n                this.enabled = false;\n            }\n            this.renderComplete();\n        }\n    };\n    MaskedTextBox.prototype.updateHTMLAttrToElement = function () {\n        if (!isNullOrUndefined(this.htmlAttributes)) {\n            for (var _i = 0, _a = Object.keys(this.htmlAttributes); _i < _a.length; _i++) {\n                var key = _a[_i];\n                if (wrapperAttr.indexOf(key) < 0) {\n                    this.element.setAttribute(key, this.htmlAttributes[key]);\n                }\n            }\n        }\n    };\n    MaskedTextBox.prototype.updateCssClass = function (newClass, oldClass) {\n        Input.setCssClass(this.getValidClassList(newClass), [this.inputObj.container], this.getValidClassList(oldClass));\n    };\n    MaskedTextBox.prototype.getValidClassList = function (maskClassName) {\n        var result = maskClassName;\n        if (!isNullOrUndefined(maskClassName) && maskClassName !== '') {\n            result = (maskClassName.replace(/\\s+/g, ' ')).trim();\n        }\n        return result;\n    };\n    MaskedTextBox.prototype.updateHTMLAttrToWrapper = function () {\n        if (!isNullOrUndefined(this.htmlAttributes)) {\n            for (var _i = 0, _a = Object.keys(this.htmlAttributes); _i < _a.length; _i++) {\n                var key = _a[_i];\n                if (wrapperAttr.indexOf(key) > -1) {\n                    if (key === 'class') {\n                        var updatedClassValues = (this.htmlAttributes[key].replace(/\\s+/g, ' ')).trim();\n                        if (updatedClassValues !== '') {\n                            addClass([this.inputObj.container], updatedClassValues.split(' '));\n                        }\n                    }\n                    else if (key === 'style') {\n                        var maskStyle = this.inputObj.container.getAttribute(key);\n                        maskStyle = !isNullOrUndefined(maskStyle) ? (maskStyle + this.htmlAttributes[key]) :\n                            this.htmlAttributes[key];\n                        this.inputObj.container.setAttribute(key, maskStyle);\n                    }\n                    else {\n                        this.inputObj.container.setAttribute(key, this.htmlAttributes[key]);\n                    }\n                }\n            }\n        }\n    };\n    MaskedTextBox.prototype.resetMaskedTextBox = function () {\n        this.promptMask = '';\n        this.hiddenMask = '';\n        this.escapeMaskValue = '';\n        this.customRegExpCollec = [];\n        this.undoCollec = [];\n        this.redoCollec = [];\n        if (this.promptChar.length > 1) {\n            this.promptChar = this.promptChar[0];\n        }\n        createMask.call(this);\n        applyMask.call(this);\n        if (this.mask === null || this.mask === '' && this.value !== undefined) {\n            setElementValue.call(this, this.value);\n        }\n        var val = strippedValue.call(this, this.element);\n        this.prevValue = val;\n        this.value = val;\n        if (!this.isInitial) {\n            unwireEvents.call(this);\n        }\n        wireEvents.call(this);\n    };\n    MaskedTextBox.prototype.setMaskPlaceholder = function (setVal, dynamicPlaceholder) {\n        if (dynamicPlaceholder || this.placeholder) {\n            Input.setPlaceholder(this.placeholder, this.element);\n            if ((this.element.value === this.promptMask && setVal && this.floatLabelType !== 'Always') ||\n                this.element.value === this.promptMask && this.floatLabelType === 'Never') {\n                setElementValue.call(this, '');\n            }\n        }\n    };\n    MaskedTextBox.prototype.setWidth = function (width) {\n        if (!isNullOrUndefined(width)) {\n            if (typeof width === 'number') {\n                this.inputObj.container.style.width = formatUnit(width);\n                this.element.style.width = formatUnit(width);\n            }\n            else if (typeof width === 'string') {\n                var elementWidth = (width.match(/px|%|em/)) ? (width) : (formatUnit(width));\n                this.inputObj.container.style.width = elementWidth;\n                this.element.style.width = elementWidth;\n            }\n        }\n    };\n    MaskedTextBox.prototype.checkHtmlAttributes = function (isDynamic) {\n        var attributes = isDynamic ? isNullOrUndefined(this.htmlAttributes) ? [] : Object.keys(this.htmlAttributes)\n            : ['placeholder', 'disabled', 'value', 'readonly'];\n        for (var _i = 0, attributes_1 = attributes; _i < attributes_1.length; _i++) {\n            var key = attributes_1[_i];\n            if (!isNullOrUndefined(this.element.getAttribute(key))) {\n                switch (key) {\n                    case 'placeholder':\n                        if ((isNullOrUndefined(this.maskOptions) || (this.maskOptions['placeholder'] === undefined)) || isDynamic) {\n                            this.setProperties({ placeholder: this.element.placeholder }, !isDynamic);\n                        }\n                        break;\n                    case 'disabled':\n                        if ((isNullOrUndefined(this.maskOptions) || (this.maskOptions['enabled'] === undefined)) || isDynamic) {\n                            var isEnabled = this.element.getAttribute(key) === 'disabled' || this.element.getAttribute(key) === '' ||\n                                this.element.getAttribute(key) === 'true' ? false : true;\n                            this.setProperties({ enabled: isEnabled }, !isDynamic);\n                        }\n                        break;\n                    case 'value':\n                        if ((isNullOrUndefined(this.maskOptions) || (this.maskOptions['value'] === undefined)) || isDynamic) {\n                            this.setProperties({ value: this.element.value }, !isDynamic);\n                        }\n                        break;\n                    case 'readonly':\n                        if ((isNullOrUndefined(this.maskOptions) || (this.maskOptions['readonly'] === undefined)) || isDynamic) {\n                            var isReadonly = this.element.getAttribute(key) === 'readonly' || this.element.getAttribute(key) === ''\n                                || this.element.getAttribute(key) === 'true' ? true : false;\n                            this.setProperties({ readonly: isReadonly }, !isDynamic);\n                        }\n                        break;\n                }\n            }\n        }\n    };\n    MaskedTextBox.prototype.createWrapper = function () {\n        var updatedCssClassValues = this.cssClass;\n        if (!isNullOrUndefined(this.cssClass) && this.cssClass !== '') {\n            updatedCssClassValues = this.getValidClassList(this.cssClass);\n        }\n        this.inputObj = Input.createInput({\n            element: this.element,\n            floatLabelType: this.floatLabelType,\n            properties: {\n                enableRtl: this.enableRtl,\n                cssClass: updatedCssClassValues,\n                enabled: this.enabled,\n                readonly: this.readonly,\n                placeholder: this.placeholder,\n                showClearButton: this.showClearButton\n            }\n        }, this.createElement);\n        this.inputObj.container.setAttribute('class', ROOT + ' ' + this.inputObj.container.getAttribute('class'));\n    };\n    /**\n     * Calls internally if any of the property value is changed.\n     *\n     * @param {MaskedTextBoxModel} newProp - Returns the dynamic property value of the component.\n     * @param {MaskedTextBoxModel} oldProp - Returns the previous property value of the component.\n     * @returns {void}\n     * @hidden\n     */\n    MaskedTextBox.prototype.onPropertyChanged = function (newProp, oldProp) {\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'value':\n                    setMaskValue.call(this, this.value);\n                    if (this.placeholder) {\n                        this.setMaskPlaceholder(false, false);\n                    }\n                    break;\n                case 'placeholder':\n                    this.setMaskPlaceholder(true, true);\n                    break;\n                case 'width':\n                    this.setWidth(newProp.width);\n                    Input.calculateWidth(this.element, this.inputObj.container);\n                    break;\n                case 'cssClass':\n                    this.updateCssClass(newProp.cssClass, oldProp.cssClass);\n                    break;\n                case 'enabled':\n                    Input.setEnabled(newProp.enabled, this.element, this.floatLabelType, this.inputObj.container);\n                    break;\n                case 'readonly':\n                    Input.setReadonly(newProp.readonly, this.element);\n                    break;\n                case 'enableRtl':\n                    Input.setEnableRtl(newProp.enableRtl, [this.inputObj.container]);\n                    break;\n                case 'customCharacters':\n                    this.customCharacters = newProp.customCharacters;\n                    this.resetMaskedTextBox();\n                    break;\n                case 'showClearButton':\n                    Input.setClearButton(newProp.showClearButton, this.element, this.inputObj, undefined, this.createElement);\n                    bindClearEvent.call(this);\n                    break;\n                case 'floatLabelType':\n                    this.floatLabelType = newProp.floatLabelType;\n                    Input.removeFloating(this.inputObj);\n                    Input.addFloating(this.element, this.floatLabelType, this.placeholder, this.createElement);\n                    break;\n                case 'htmlAttributes':\n                    this.updateHTMLAttrToElement();\n                    this.updateHTMLAttrToWrapper();\n                    this.checkHtmlAttributes(true);\n                    break;\n                case 'mask':\n                    {\n                        var strippedValue_1 = this.value;\n                        this.mask = newProp.mask;\n                        this.updateValue(strippedValue_1);\n                    }\n                    break;\n                case 'promptChar': {\n                    if (newProp.promptChar.length > 1) {\n                        newProp.promptChar = newProp.promptChar[0];\n                    }\n                    if (newProp.promptChar) {\n                        this.promptChar = newProp.promptChar;\n                    }\n                    else {\n                        this.promptChar = '_';\n                    }\n                    var value = this.element.value.replace(new RegExp('[' + oldProp.promptChar + ']', 'g'), this.promptChar);\n                    if (this.promptMask === this.element.value) {\n                        value = this.promptMask.replace(new RegExp('[' + oldProp.promptChar + ']', 'g'), this.promptChar);\n                    }\n                    this.promptMask = this.promptMask.replace(new RegExp('[' + oldProp.promptChar + ']', 'g'), this.promptChar);\n                    this.undoCollec = this.redoCollec = [];\n                    setElementValue.call(this, value);\n                    break;\n                }\n            }\n        }\n        this.preventChange = this.isAngular && this.preventChange ? !this.preventChange : this.preventChange;\n    };\n    MaskedTextBox.prototype.updateValue = function (strippedVal) {\n        this.resetMaskedTextBox();\n        setMaskValue.call(this, strippedVal);\n    };\n    /* eslint-disable valid-jsdoc, jsdoc/require-returns-description */\n    /**\n     * Gets the value of the MaskedTextBox with the masked format.\n     * By using `value` property, you can get the raw value of maskedtextbox without literals and prompt characters.\n     *\n     * @returns {string}\n     */\n    MaskedTextBox.prototype.getMaskedValue = function () {\n        return unstrippedValue.call(this, this.element);\n    };\n    /* eslint-enable valid-jsdoc, jsdoc/require-returns-description */\n    /**\n     * Sets the focus to widget for interaction.\n     *\n     * @returns {void}\n     */\n    MaskedTextBox.prototype.focusIn = function () {\n        if (document.activeElement !== this.element && this.enabled) {\n            this.element.focus();\n            addClass([this.inputObj.container], [MASKINPUT_FOCUS]);\n        }\n    };\n    /**\n     * Remove the focus from widget, if the widget is in focus state.\n     *\n     * @returns {void}\n     */\n    MaskedTextBox.prototype.focusOut = function () {\n        if (document.activeElement === this.element && this.enabled) {\n            this.element.blur();\n            removeClass([this.inputObj.container], [MASKINPUT_FOCUS]);\n        }\n    };\n    /**\n     * Removes the component from the DOM and detaches all its related event handlers.\n     * Also it maintains the initial input element from the DOM.\n     *\n     * @method destroy\n     * @returns {void}\n     */\n    MaskedTextBox.prototype.destroy = function () {\n        unwireEvents.call(this);\n        var attrArray = ['aria-labelledby', 'role', 'autocomplete', 'aria-readonly',\n            'aria-disabled', 'autocapitalize', 'spellcheck', 'aria-autocomplete', 'aria-live', 'aria-invalid'];\n        for (var i = 0; i < attrArray.length; i++) {\n            this.element.removeAttribute(attrArray[i]);\n        }\n        this.element.classList.remove('e-input');\n        this.inputObj.container.insertAdjacentElement('afterend', this.element);\n        detach(this.inputObj.container);\n        _super.prototype.destroy.call(this);\n    };\n    __decorate([\n        Property(null)\n    ], MaskedTextBox.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property(null)\n    ], MaskedTextBox.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], MaskedTextBox.prototype, \"placeholder\", void 0);\n    __decorate([\n        Property('Never')\n    ], MaskedTextBox.prototype, \"floatLabelType\", void 0);\n    __decorate([\n        Property({})\n    ], MaskedTextBox.prototype, \"htmlAttributes\", void 0);\n    __decorate([\n        Property(true)\n    ], MaskedTextBox.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(false)\n    ], MaskedTextBox.prototype, \"readonly\", void 0);\n    __decorate([\n        Property(false)\n    ], MaskedTextBox.prototype, \"showClearButton\", void 0);\n    __decorate([\n        Property(false)\n    ], MaskedTextBox.prototype, \"enablePersistence\", void 0);\n    __decorate([\n        Property(null)\n    ], MaskedTextBox.prototype, \"mask\", void 0);\n    __decorate([\n        Property('_')\n    ], MaskedTextBox.prototype, \"promptChar\", void 0);\n    __decorate([\n        Property(null)\n    ], MaskedTextBox.prototype, \"value\", void 0);\n    __decorate([\n        Property(null)\n    ], MaskedTextBox.prototype, \"customCharacters\", void 0);\n    __decorate([\n        Event()\n    ], MaskedTextBox.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], MaskedTextBox.prototype, \"destroyed\", void 0);\n    __decorate([\n        Event()\n    ], MaskedTextBox.prototype, \"change\", void 0);\n    __decorate([\n        Event()\n    ], MaskedTextBox.prototype, \"focus\", void 0);\n    __decorate([\n        Event()\n    ], MaskedTextBox.prototype, \"blur\", void 0);\n    MaskedTextBox = __decorate([\n        NotifyPropertyChanges\n    ], MaskedTextBox);\n    return MaskedTextBox;\n}(Component));\nexport { MaskedTextBox };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}